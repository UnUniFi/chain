swagger: '2.0'
info:
  title: UnUniFi - Legacy REST and gRPC Gateway docs
  description: A REST interface for state queries, legacy transactions
  version: 1.0.0
paths:
  /ununifi/derivatives/estimate-dlp-token-amount:
    get:
      operationId: EstimateDLPTokenAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              estimated_dlp_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              deposit_fee:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: mint_denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/derivatives/estimate-redeem-amount:
    get:
      operationId: EstimateRedeemTokenAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              fee:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: redeem_denom
          in: query
          required: false
          type: string
        - name: lpt_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/derivatives/liquidity-providers/nominal-apy:
    get:
      operationId: LiquidityProviderTokenNominalAPY
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              apy:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: before_height
          in: query
          required: false
          type: string
          format: int64
        - name: after_height
          in: query
          required: false
          type: string
          format: int64
      tags:
        - Query
  /ununifi/derivatives/liquidity-providers/real-apy:
    get:
      operationId: LiquidityProviderTokenRealAPY
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              apy:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: before_height
          in: query
          required: false
          type: string
          format: int64
        - name: after_height
          in: query
          required: false
          type: string
          format: int64
      tags:
        - Query
  /ununifi/derivatives/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: DerivativesParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  pool_params:
                    type: object
                    properties:
                      quote_ticker:
                        type: string
                      base_lpt_mint_fee:
                        type: string
                      base_lpt_redeem_fee:
                        type: string
                      borrowing_fee_rate_per_hour:
                        type: string
                      report_liquidation_reward_rate:
                        type: string
                      report_levy_period_reward_rate:
                        type: string
                      accepted_assets_conf:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            target_weight:
                              type: string
                      levy_period_required_seconds:
                        type: string
                        format: uint64
                  perpetual_futures:
                    type: object
                    properties:
                      commission_rate:
                        type: string
                      margin_maintenance_rate:
                        type: string
                      imaginary_funding_rate_proportional_coefficient:
                        type: string
                      markets:
                        type: array
                        items:
                          type: object
                          properties:
                            base_denom:
                              type: string
                            quote_denom:
                              type: string
                      max_leverage:
                        type: integer
                        format: int64
                  perpetual_options:
                    type: object
                    properties:
                      premium_commission_rate:
                        type: string
                      strike_commission_rate:
                        type: string
                      margin_maintenance_rate:
                        type: string
                      imaginary_funding_rate_proportional_coefficient:
                        type: string
                      markets:
                        type: array
                        items:
                          type: object
                          properties:
                            base_denom:
                              type: string
                            quote_denom:
                              type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/pending-payment-positions:
    get:
      operationId: AllPendingPaymentPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pending_payment_positions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    refundable_amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    created_at:
                      type: string
                      format: date-time
                    created_height:
                      type: string
                      format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/pending-payment-positions/{position_id}:
    get:
      operationId: PendingPaymentPosition
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pending_payment_position:
                type: object
                properties:
                  id:
                    type: string
                  refundable_amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  created_at:
                    type: string
                    format: date-time
                  created_height:
                    type: string
                    format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: position_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/derivatives/perpetual-futures:
    get:
      operationId: PerpetualFutures
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metrics_quote_ticker:
                type: string
              long_positions:
                type: string
              short_positions:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/perpetual-futures/market:
    get:
      operationId: PerpetualFuturesMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price:
                type: string
              metrics_quote_ticker:
                type: string
              long_positions:
                type: string
              short_positions:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: base_denom
          in: query
          required: false
          type: string
        - name: quote_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/derivatives/perpetual-options:
    get:
      operationId: PerpetualOptions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/perpetual-options/market:
    get:
      operationId: PerpetualOptionsMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: base_denom
          in: query
          required: false
          type: string
        - name: quote_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/derivatives/pool:
    get:
      summary: 'this line is used by starport scaffolding # 2'
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metrics_quote_ticker:
                type: string
              pool_market_cap:
                type: object
                properties:
                  quote_ticker:
                    type: string
                  total:
                    type: string
                  asset_info:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                        price:
                          type: string
                        reserved:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/pools/available-assets:
    get:
      operationId: AvailableAssetsInPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              available_assets:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/derivatives/pools/dlp:
    get:
      operationId: DLPTokenRates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              symbol:
                type: string
              rates:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /ununifi/derivatives/positions:
    get:
      operationId: AllPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              positions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    market:
                      type: object
                      properties:
                        base_denom:
                          type: string
                        quote_denom:
                          type: string
                    opener_address:
                      type: string
                    opened_at:
                      type: string
                      format: date-time
                    opened_height:
                      type: string
                      format: uint64
                    opened_base_rate:
                      type: string
                    opened_quote_rate:
                      type: string
                    remaining_margin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    levied_amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    levied_amount_negative:
                      type: boolean
                    last_levied_at:
                      type: string
                      format: date-time
                    position_instance:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                        Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                        Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON


                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/derivatives/positions/perpetual-futures/{position_type}/{address}:
    get:
      operationId: PerpetualFuturesPositionSize
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              total_position_size_usd:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: position_type
          in: path
          required: true
          type: string
          enum:
            - POSITION_UNKNOWN
            - LONG
            - SHORT
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/derivatives/positions/{position_id}:
    get:
      operationId: Position
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              position:
                type: object
                properties:
                  id:
                    type: string
                  market:
                    type: object
                    properties:
                      base_denom:
                        type: string
                      quote_denom:
                        type: string
                  opener_address:
                    type: string
                  opened_at:
                    type: string
                    format: date-time
                  opened_height:
                    type: string
                    format: uint64
                  opened_base_rate:
                    type: string
                  opened_quote_rate:
                    type: string
                  remaining_margin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  levied_amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  levied_amount_negative:
                    type: boolean
                  last_levied_at:
                    type: string
                    format: date-time
                  position_instance:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                      Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                      Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON


                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
              valuation_profit:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              margin_maintenance_rate:
                type: string
              effective_margin:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: position_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/derivatives/{address}/positions:
    get:
      operationId: AddressPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              positions:
                type: array
                items:
                  type: object
                  properties:
                    position:
                      type: object
                      properties:
                        id:
                          type: string
                        market:
                          type: object
                          properties:
                            base_denom:
                              type: string
                            quote_denom:
                              type: string
                        opener_address:
                          type: string
                        opened_at:
                          type: string
                          format: date-time
                        opened_height:
                          type: string
                          format: uint64
                        opened_base_rate:
                          type: string
                        opened_quote_rate:
                          type: string
                        remaining_margin:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        levied_amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        levied_amount_negative:
                          type: boolean
                        last_levied_at:
                          type: string
                          format: date-time
                        position_instance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                            value:
                              type: string
                              format: byte
                              description: >-
                                Must be a valid serialized protocol buffer of
                                the above specified type.
                          description: >-
                            `Any` contains an arbitrary serialized protocol
                            buffer message along with a

                            URL that describes the type of the serialized
                            message.


                            Protobuf library provides support to pack/unpack Any
                            values in the form

                            of utility functions or additional generated methods
                            of the Any type.


                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                            Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                            Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will
                            by default use

                            'type.googleapis.com/full.type.name' as the type URL
                            and the unpack

                            methods only use the fully qualified type name after
                            the last '/'

                            in the type URL, for example "foo.bar.com/x/y.z"
                            will yield type

                            name "y.z".



                            JSON


                            The JSON representation of an `Any` value uses the
                            regular

                            representation of the deserialized, embedded
                            message, with an

                            additional field `@type` which contains the type
                            URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a
                            custom JSON

                            representation, that representation will be embedded
                            adding a field

                            `value` which holds the custom JSON in addition to
                            the `@type`

                            field. Example (for message
                            [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                    valuation_profit:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_margin_value:
                      type: string
                    effective_margin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    margin_maintenance_rate:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/ecosystemincentive/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: EcosystemIncentiveParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  reward_params:
                    type: array
                    items:
                      type: object
                      properties:
                        module_name:
                          type: string
                        reward_rate:
                          type: array
                          items:
                            type: object
                            properties:
                              reward_type:
                                type: string
                                enum:
                                  - UNKNOWN
                                  - STAKERS
                                  - FRONTEND_DEVELOPERS
                                  - COMMUNITY_POOL
                                default: UNKNOWN
                                description: >-
                                  STAKERS type reward will be distributed for
                                  the stakers of GUU token.

                                  FRONTEND_DEVELOPERS type reward will be
                                  disributed for the creators of frontend of
                                  UnUniFi's services.

                                  COMMUNITY_POOL type reward will be distributed
                                  for the community pool.
                              rate:
                                type: string
                            title: >-
                              RewardRate defines the ratio to take reward for a
                              specific reward_type.

                              The total sum of reward_rate in a module cannot be
                              exceed 1
                      title: >-
                        RewardParams defines which module have which rewards
                        type and rate 

                        to maintain the correctness of the fee rate in a module

                        e.g. if nftbackedloan module have "Frontend" and
                        "Collection" incentive, 

                        the combined those rates for the incentive cannot be
                        exceed 1
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/ecosystemincentive/recipients:
    get:
      operationId: RecipientAddressWithNftId
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: token_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/ecosystemincentive/rewards/{address}:
    get:
      operationId: EcosystemRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/bids:
    get:
      operationId: NftBids
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bids:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: object
                      properties:
                        nft_id:
                          type: object
                          properties:
                            class_id:
                              type: string
                            token_id:
                              type: string
                        bidder:
                          type: string
                    price:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    deposit:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    paid_amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    expiry:
                      type: string
                      format: date-time
                    interest_rate:
                      type: string
                    automatic_payment:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
                    loan:
                      title: borrow info
                      type: object
                      properties:
                        amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        last_repaid_at:
                          type: string
                          format: date-time
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: token_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/bids/{bidder}:
    get:
      operationId: BidderBids
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bids:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: object
                      properties:
                        nft_id:
                          type: object
                          properties:
                            class_id:
                              type: string
                            token_id:
                              type: string
                        bidder:
                          type: string
                    price:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    deposit:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    paid_amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    expiry:
                      type: string
                      format: date-time
                    interest_rate:
                      type: string
                    automatic_payment:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
                    loan:
                      title: borrow info
                      type: object
                      properties:
                        amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        last_repaid_at:
                          type: string
                          format: date-time
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: bidder
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/liquidation:
    get:
      operationId: Liquidation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquidations:
                type: object
                properties:
                  liquidation:
                    type: object
                    properties:
                      amount:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      liquidation_date:
                        type: string
                        format: date-time
                  next_liquidation:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        liquidation_date:
                          type: string
                          format: date-time
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: token_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/listed-classes:
    get:
      operationId: ListedClasses
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              classes:
                type: array
                items:
                  type: object
                  properties:
                    class_id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    symbol:
                      type: string
                    uri:
                      type: string
                    urihash:
                      type: string
                    nfts:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          uri:
                            type: string
                          uri_hash:
                            type: string
                    nft_count:
                      type: string
                      format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nft_limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /ununifi/nftbackedloan/listed-classes/class:
    get:
      operationId: ListedClass
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              class_id:
                type: string
              name:
                type: string
              description:
                type: string
              symbol:
                type: string
              uri:
                type: string
              urihash:
                type: string
              nfts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    uri:
                      type: string
                    uri_hash:
                      type: string
              nft_count:
                type: string
                format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: nft_limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /ununifi/nftbackedloan/listed-nfts:
    get:
      operationId: ListedNfts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              listings:
                type: array
                items:
                  type: object
                  properties:
                    listing:
                      type: object
                      properties:
                        nft_id:
                          type: object
                          properties:
                            class_id:
                              type: string
                            token_id:
                              type: string
                        owner:
                          type: string
                        state:
                          type: string
                          enum:
                            - UNKNOWN
                            - LISTING
                            - BIDDING
                            - SELLING_DECISION
                            - LIQUIDATION
                            - SUCCESSFUL_BID
                          default: UNKNOWN
                        bid_denom:
                          type: string
                        min_deposit_rate:
                          type: string
                        min_bid_period:
                          type: string
                        started_at:
                          type: string
                          format: date-time
                        liquidated_at:
                          type: string
                          format: date-time
                        full_payment_end_at:
                          type: string
                          format: date-time
                        successful_bid_end_at:
                          type: string
                          format: date-time
                        collected_amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        collected_amount_negative:
                          type: boolean
                    nft_info:
                      type: object
                      properties:
                        id:
                          type: string
                        uri:
                          type: string
                        uri_hash:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/listed-nfts/nft:
    get:
      operationId: ListedNft
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              listing:
                type: object
                properties:
                  nft_id:
                    type: object
                    properties:
                      class_id:
                        type: string
                      token_id:
                        type: string
                  owner:
                    type: string
                  state:
                    type: string
                    enum:
                      - UNKNOWN
                      - LISTING
                      - BIDDING
                      - SELLING_DECISION
                      - LIQUIDATION
                      - SUCCESSFUL_BID
                    default: UNKNOWN
                  bid_denom:
                    type: string
                  min_deposit_rate:
                    type: string
                  min_bid_period:
                    type: string
                  started_at:
                    type: string
                    format: date-time
                  liquidated_at:
                    type: string
                    format: date-time
                  full_payment_end_at:
                    type: string
                    format: date-time
                  successful_bid_end_at:
                    type: string
                    format: date-time
                  collected_amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  collected_amount_negative:
                    type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: token_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/loans:
    get:
      operationId: Loan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              nft_id:
                type: object
                properties:
                  class_id:
                    type: string
                  token_id:
                    type: string
              borrowing_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              borrowing_limit:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              total_deposit:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: token_id
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/nftbackedloan/params:
    get:
      operationId: NftBackedLoanParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  min_staking_for_listing:
                    type: string
                  bid_tokens:
                    type: array
                    items:
                      type: string
                  nft_listing_cancel_required_seconds:
                    type: string
                    format: uint64
                  bid_cancel_required_seconds:
                    type: string
                    format: uint64
                  nft_listing_full_payment_period:
                    type: string
                    format: uint64
                  nft_listing_nft_delivery_period:
                    type: string
                    format: uint64
                  nft_listing_commission_rate:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/nftbackedloan/rewards/{address}:
    get:
      operationId: Rewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/nftfactory/class/factory/{creator}/{subclass}/authority-metadata:
    get:
      operationId: ClassAuthorityMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              authority_metadata:
                type: object
                properties:
                  Admin:
                    type: string
                    title: Can be empty for no admin, or a valid address
                description: >-
                  ClassAuthorityMetadata specifies metadata for addresses that
                  have specific

                  capabilities over a nft factory class. Right now there is only
                  one Admin

                  permission, but is planned to be extended to the future.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: creator
          in: path
          required: true
          type: string
        - name: subclass
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/nftfactory/classes-from-creator/{creator}:
    get:
      operationId: ClassesFromCreator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              classes:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: creator
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/nftfactory/params:
    get:
      operationId: NftFactoryParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  class_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      ClassCreationFee is the fee required to create a new denom
                      using the nftfactory module
                  fee_collector_address:
                    type: string
                    title: >-
                      FeeCollectorAddress is the address where fees collected
                      from denom creation are sent to
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/pricefeed/markets:
    get:
      summary: 'this line is used by starport scaffolding # 2'
      operationId: MarketAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    base_asset:
                      type: string
                    quote_asset:
                      type: string
                    oracles:
                      type: array
                      items:
                        type: string
                    active:
                      type: boolean
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/pricefeed/markets/{market_id}/oracles:
    get:
      operationId: OracleAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              oracles:
                type: array
                items:
                  type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/pricefeed/markets/{market_id}/price:
    get:
      operationId: Price
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price:
                type: object
                properties:
                  market_id:
                    type: string
                  price:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/pricefeed/markets/{market_id}/raw_prices:
    get:
      operationId: RawPriceAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              prices:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    oracle_address:
                      type: string
                    price:
                      type: string
                    expiry:
                      type: string
                      format: date-time
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/pricefeed/params:
    get:
      operationId: PricefeedParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  deposit_for_posting:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  markets:
                    type: array
                    items:
                      type: object
                      properties:
                        market_id:
                          type: string
                        base_asset:
                          type: string
                        quote_asset:
                          type: string
                        oracles:
                          type: array
                          items:
                            type: string
                        active:
                          type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/pricefeed/prices:
    get:
      operationId: PriceAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              prices:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    price:
                      type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/yieldaggregator/denom-infos:
    get:
      operationId: DenomInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    symbol:
                      type: string
                    channels:
                      type: array
                      items:
                        type: object
                        properties:
                          send_chain_id:
                            type: string
                          recv_chain_id:
                            type: string
                          channel_id:
                            type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/yieldaggregator/intermediary-account-info:
    get:
      operationId: IntermediaryAccountInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              addrs:
                type: array
                items:
                  type: object
                  properties:
                    chain_id:
                      type: string
                    address:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/yieldaggregator/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: YieldAggregatorParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  commission_rate:
                    type: string
                    title: |-
                      TODO: add deposit_commission_rate
                      TODO: add reserve_annual_commission_rate
                      TODO: rename to withdraw_commission_rate
                  vault_creation_fee:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  vault_creation_deposit:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  fee_collector_address:
                    type: string
                  ibc_transfer_timeout_nanos:
                    type: string
                    format: uint64
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/yieldaggregator/strategies:
    get:
      operationId: StrategyAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              strategies:
                type: array
                items:
                  type: object
                  properties:
                    strategy:
                      type: object
                      properties:
                        denom:
                          type: string
                        id:
                          type: string
                          format: uint64
                        contract_address:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        git_url:
                          type: string
                    deposit_fee_rate:
                      type: string
                    withdraw_fee_rate:
                      type: string
                    performance_fee_rate:
                      type: string
                    symbol:
                      type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/yieldaggregator/strategies/{id}:
    get:
      operationId: Strategy
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              strategy:
                type: object
                properties:
                  strategy:
                    type: object
                    properties:
                      denom:
                        type: string
                      id:
                        type: string
                        format: uint64
                      contract_address:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      git_url:
                        type: string
                  deposit_fee_rate:
                    type: string
                  withdraw_fee_rate:
                    type: string
                  performance_fee_rate:
                    type: string
                  symbol:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/yieldaggregator/symbol-infos:
    get:
      operationId: SymbolInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              info:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                    native_chain_id:
                      type: string
                    channels:
                      type: array
                      items:
                        type: object
                        properties:
                          send_chain_id:
                            type: string
                          recv_chain_id:
                            type: string
                          channel_id:
                            type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/yieldaggregator/vaults:
    get:
      summary: 'this line is used by starport scaffolding # 2'
      operationId: VaultAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vaults:
                type: array
                items:
                  type: object
                  properties:
                    vault:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        symbol:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        owner:
                          type: string
                        owner_deposit:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        withdraw_commission_rate:
                          type: string
                        withdraw_reserve_rate:
                          type: string
                        strategy_weights:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              strategy_id:
                                type: string
                                format: uint64
                              weight:
                                type: string
                        fee_collector_address:
                          type: string
                    total_bonded_amount:
                      type: string
                    total_unbonding_amount:
                      type: string
                    withdraw_reserve:
                      type: string
                    total_pending_deposit:
                      type: string
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /ununifi/yieldaggregator/vaults/share-holders/{share_holder}:
    get:
      operationId: VaultAllByShareHolder
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vaults:
                type: array
                items:
                  type: object
                  properties:
                    vault:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        symbol:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        owner:
                          type: string
                        owner_deposit:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        withdraw_commission_rate:
                          type: string
                        withdraw_reserve_rate:
                          type: string
                        strategy_weights:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              strategy_id:
                                type: string
                                format: uint64
                              weight:
                                type: string
                        fee_collector_address:
                          type: string
                    total_bonded_amount:
                      type: string
                    total_unbonding_amount:
                      type: string
                    withdraw_reserve:
                      type: string
                    total_pending_deposit:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: share_holder
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/yieldaggregator/vaults/{id}:
    get:
      operationId: Vault
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vault:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  symbol:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  owner:
                    type: string
                  owner_deposit:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  withdraw_commission_rate:
                    type: string
                  withdraw_reserve_rate:
                    type: string
                  strategy_weights:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        strategy_id:
                          type: string
                          format: uint64
                        weight:
                          type: string
                  fee_collector_address:
                    type: string
              total_bonded_amount:
                type: string
              total_unbonding_amount:
                type: string
              withdraw_reserve:
                type: string
              total_pending_deposit:
                type: string
              strategies:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    id:
                      type: string
                      format: uint64
                    contract_address:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    git_url:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/yieldaggregator/vaults/{id}/estimate-mint-amount:
    get:
      operationId: EstimateMintAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mint_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
        - name: deposit_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/yieldaggregator/vaults/{id}/estimate-redeem-amount:
    get:
      operationId: EstimateRedeemAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              share_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              fee:
                type: string
              redeem_amount:
                type: string
              total_amount:
                type: string
              symbol:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
        - name: burn_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/all-tranches:
    get:
      summary: Tranches by Strategy
      operationId: AllTranches
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tranches:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    strategy_contract:
                      type: string
                    start_time:
                      type: string
                      format: uint64
                    maturity:
                      type: string
                      format: uint64
                    swap_fee:
                      type: string
                    exit_fee:
                      type: string
                    total_shares:
                      title: sum of all LP tokens sent out
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    pool_assets:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: Pool assets are sorted by denomination
                    denom:
                      type: string
                    deposit_denom:
                      type: string
            description: >-
              QueryTranchesResponse is response type for the Query/Tranches RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/irs/estimate-mint-liquidity-pool-token:
    get:
      summary: Estimate tokens to mint liquidity pool token
      operationId: EstimateMintLiquidityPoolToken
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mint_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              additional_required_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-mint-pt-yt-pair:
    get:
      summary: Estimate mint amount of PT&YT pair
      operationId: EstimateMintPtYtPair
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pt_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              yt_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-redeem-liquidity-pool-token:
    get:
      summary: Estimate redeem amount of liquidity pool token
      operationId: EstimateRedeemLiquidityPoolToken
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redeem_amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-redeem-matured-yt:
    get:
      summary: Estimate redeem matured YT
      operationId: EstimateRedeemMaturedYt
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redeem_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: yt_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-redeem-pt-yt-pair:
    get:
      summary: Estimate redeem amount of PT&YT pair
      operationId: EstimateRedeemPtYtPair
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redeem_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              additional_required_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-required-deposit-swap-to-yt:
    get:
      summary: Estimate required Deposit_Token amount to swap to YT
      operationId: EstimateRequiredDepositSwapToYt
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              required_deposit_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: desired_yt_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-swap-in-pool:
    get:
      summary: Estimate swap amount of Deposit_Token/PT (in the pool)
      operationId: EstimateSwapInPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/estimate-swap-to-yt:
    get:
      summary: Estimate swap Deposit_Token to YT
      operationId: EstimateSwapToYt
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              yt_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: query
          required: false
          type: string
          format: uint64
        - name: denom
          in: query
          required: false
          type: string
        - name: amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /ununifi/irs/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: IrsParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  authority:
                    type: string
                  trade_fee_rate:
                    type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /ununifi/irs/tranche/{id}:
    get:
      summary: Tranche by id
      operationId: Tranche
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tranche:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  strategy_contract:
                    type: string
                  start_time:
                    type: string
                    format: uint64
                  maturity:
                    type: string
                    format: uint64
                  swap_fee:
                    type: string
                  exit_fee:
                    type: string
                  total_shares:
                    title: sum of all LP tokens sent out
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  pool_assets:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: Pool assets are sorted by denomination
                  denom:
                    type: string
                  deposit_denom:
                    type: string
            description: >-
              QueryTranchResponse is response type for the Query/Tranch RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/irs/tranche/{id}/pool-apy:
    get:
      summary: tranche Ls APYs by id
      operationId: TranchePoolAPYs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquidity_apy:
                type: string
              discount_pt_apy:
                type: string
              liquidity_rate_per_deposit:
                type: string
              deposit_token_percentage_in_pool:
                type: string
              pt_percentage_in_pool:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/irs/tranche/{id}/pt-apy:
    get:
      summary: tranche PT APYs by id
      operationId: TranchePtAPYs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pt_apy:
                type: string
              pt_rate_per_deposit:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/irs/tranche/{id}/yt-apy:
    get:
      summary: tranche YT APYs by id
      operationId: TrancheYtAPYs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              yt_apy:
                type: string
              yt_rate_per_deposit:
                type: string
              ls_apy:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /ununifi/irs/tranches/{strategy_contract}:
    get:
      summary: Tranches by Strategy
      operationId: Tranches
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tranches:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    strategy_contract:
                      type: string
                    start_time:
                      type: string
                      format: uint64
                    maturity:
                      type: string
                      format: uint64
                    swap_fee:
                      type: string
                    exit_fee:
                      type: string
                    total_shares:
                      title: sum of all LP tokens sent out
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    pool_assets:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: Pool assets are sorted by denomination
                    denom:
                      type: string
                    deposit_denom:
                      type: string
            description: >-
              QueryTranchesResponse is response type for the Query/Tranches RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: strategy_contract
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/irs/vault/{strategy_contract}:
    get:
      summary: Vault queries a single InterestRateSwapVault
      operationId: VaultByContract
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vault:
                type: object
                properties:
                  strategy_contract:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  max_maturity:
                    type: string
                    format: uint64
                  cycle:
                    type: string
                    format: uint64
                  last_tranche_time:
                    type: string
                    format: uint64
                  denom:
                    type: string
                  deposit_denom:
                    type: string
            description: >-
              QueryVaultResponse is response type for the Query/Vault RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: strategy_contract
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/irs/vault/{strategy_contract}/maturities/{maturity}:
    get:
      summary: VaultDetails queries the details of the vault
      operationId: VaultDetails
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquidity_pool:
                type: string
              fy_rate:
                type: string
              lvy_rate:
                type: string
            description: >-
              QueryVaultDetailsResponse is response type for the
              Query/VaultDetails RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: strategy_contract
          in: path
          required: true
          type: string
        - name: maturity
          in: path
          required: true
          type: string
      tags:
        - Query
  /ununifi/irs/vaults:
    get:
      summary: Vaults queries the InterestRateSwapVaults
      operationId: Vaults
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vaults:
                type: array
                items:
                  type: object
                  properties:
                    strategy_contract:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    max_maturity:
                      type: string
                      format: uint64
                    cycle:
                      type: string
                      format: uint64
                    last_tranche_time:
                      type: string
                      format: uint64
                    denom:
                      type: string
                    deposit_denom:
                      type: string
            description: >-
              QueryVaultsResponse is response type for the Query/Vaults RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
definitions:
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON


      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON


            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  ununifi.derivatives.Market:
    type: object
    properties:
      base_denom:
        type: string
      quote_denom:
        type: string
  ununifi.derivatives.Params:
    type: object
    properties:
      pool_params:
        type: object
        properties:
          quote_ticker:
            type: string
          base_lpt_mint_fee:
            type: string
          base_lpt_redeem_fee:
            type: string
          borrowing_fee_rate_per_hour:
            type: string
          report_liquidation_reward_rate:
            type: string
          report_levy_period_reward_rate:
            type: string
          accepted_assets_conf:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                target_weight:
                  type: string
          levy_period_required_seconds:
            type: string
            format: uint64
      perpetual_futures:
        type: object
        properties:
          commission_rate:
            type: string
          margin_maintenance_rate:
            type: string
          imaginary_funding_rate_proportional_coefficient:
            type: string
          markets:
            type: array
            items:
              type: object
              properties:
                base_denom:
                  type: string
                quote_denom:
                  type: string
          max_leverage:
            type: integer
            format: int64
      perpetual_options:
        type: object
        properties:
          premium_commission_rate:
            type: string
          strike_commission_rate:
            type: string
          margin_maintenance_rate:
            type: string
          imaginary_funding_rate_proportional_coefficient:
            type: string
          markets:
            type: array
            items:
              type: object
              properties:
                base_denom:
                  type: string
                quote_denom:
                  type: string
  ununifi.derivatives.PendingPaymentPosition:
    type: object
    properties:
      id:
        type: string
      refundable_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      created_at:
        type: string
        format: date-time
      created_height:
        type: string
        format: uint64
  ununifi.derivatives.PerpetualFuturesParams:
    type: object
    properties:
      commission_rate:
        type: string
      margin_maintenance_rate:
        type: string
      imaginary_funding_rate_proportional_coefficient:
        type: string
      markets:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
            quote_denom:
              type: string
      max_leverage:
        type: integer
        format: int64
  ununifi.derivatives.PerpetualOptionsParams:
    type: object
    properties:
      premium_commission_rate:
        type: string
      strike_commission_rate:
        type: string
      margin_maintenance_rate:
        type: string
      imaginary_funding_rate_proportional_coefficient:
        type: string
      markets:
        type: array
        items:
          type: object
          properties:
            base_denom:
              type: string
            quote_denom:
              type: string
  ununifi.derivatives.PoolAssetConf:
    type: object
    properties:
      denom:
        type: string
      target_weight:
        type: string
  ununifi.derivatives.PoolMarketCap:
    type: object
    properties:
      quote_ticker:
        type: string
      total:
        type: string
      asset_info:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
            price:
              type: string
            reserved:
              type: string
  ununifi.derivatives.PoolMarketCap.AssetInfo:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
      price:
        type: string
      reserved:
        type: string
  ununifi.derivatives.PoolParams:
    type: object
    properties:
      quote_ticker:
        type: string
      base_lpt_mint_fee:
        type: string
      base_lpt_redeem_fee:
        type: string
      borrowing_fee_rate_per_hour:
        type: string
      report_liquidation_reward_rate:
        type: string
      report_levy_period_reward_rate:
        type: string
      accepted_assets_conf:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            target_weight:
              type: string
      levy_period_required_seconds:
        type: string
        format: uint64
  ununifi.derivatives.Position:
    type: object
    properties:
      id:
        type: string
      market:
        type: object
        properties:
          base_denom:
            type: string
          quote_denom:
            type: string
      opener_address:
        type: string
      opened_at:
        type: string
        format: date-time
      opened_height:
        type: string
        format: uint64
      opened_base_rate:
        type: string
      opened_quote_rate:
        type: string
      remaining_margin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      levied_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      levied_amount_negative:
        type: boolean
      last_levied_at:
        type: string
        format: date-time
      position_instance:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

          Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

          Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON


          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
  ununifi.derivatives.PositionType:
    type: string
    enum:
      - POSITION_UNKNOWN
      - LONG
      - SHORT
    default: POSITION_UNKNOWN
  ununifi.derivatives.QueriedPosition:
    type: object
    properties:
      position:
        type: object
        properties:
          id:
            type: string
          market:
            type: object
            properties:
              base_denom:
                type: string
              quote_denom:
                type: string
          opener_address:
            type: string
          opened_at:
            type: string
            format: date-time
          opened_height:
            type: string
            format: uint64
          opened_base_rate:
            type: string
          opened_quote_rate:
            type: string
          remaining_margin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          levied_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          levied_amount_negative:
            type: boolean
          last_levied_at:
            type: string
            format: date-time
          position_instance:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      valuation_profit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      remaining_margin_value:
        type: string
      effective_margin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      margin_maintenance_rate:
        type: string
  ununifi.derivatives.QueryAddressPositionsResponse:
    type: object
    properties:
      positions:
        type: array
        items:
          type: object
          properties:
            position:
              type: object
              properties:
                id:
                  type: string
                market:
                  type: object
                  properties:
                    base_denom:
                      type: string
                    quote_denom:
                      type: string
                opener_address:
                  type: string
                opened_at:
                  type: string
                  format: date-time
                opened_height:
                  type: string
                  format: uint64
                opened_base_rate:
                  type: string
                opened_quote_rate:
                  type: string
                remaining_margin:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                levied_amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                levied_amount_negative:
                  type: boolean
                last_levied_at:
                  type: string
                  format: date-time
                position_instance:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
            valuation_profit:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            remaining_margin_value:
              type: string
            effective_margin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            margin_maintenance_rate:
              type: string
  ununifi.derivatives.QueryAllPendingPaymentPositionsResponse:
    type: object
    properties:
      pending_payment_positions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            refundable_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            created_at:
              type: string
              format: date-time
            created_height:
              type: string
              format: uint64
  ununifi.derivatives.QueryAllPositionsResponse:
    type: object
    properties:
      positions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            market:
              type: object
              properties:
                base_denom:
                  type: string
                quote_denom:
                  type: string
            opener_address:
              type: string
            opened_at:
              type: string
              format: date-time
            opened_height:
              type: string
              format: uint64
            opened_base_rate:
              type: string
            opened_quote_rate:
              type: string
            remaining_margin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            levied_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            levied_amount_negative:
              type: boolean
            last_levied_at:
              type: string
              format: date-time
            position_instance:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON


                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.derivatives.QueryAvailableAssetsInPoolResponse:
    type: object
    properties:
      available_assets:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  ununifi.derivatives.QueryDLPTokenRateResponse:
    type: object
    properties:
      symbol:
        type: string
      rates:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  ununifi.derivatives.QueryEstimateDLPTokenAmountResponse:
    type: object
    properties:
      estimated_dlp_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      deposit_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.derivatives.QueryEstimateRedeemTokenAmountResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.derivatives.QueryLiquidityProviderTokenNominalAPYResponse:
    type: object
    properties:
      apy:
        type: string
  ununifi.derivatives.QueryLiquidityProviderTokenRealAPYResponse:
    type: object
    properties:
      apy:
        type: string
  ununifi.derivatives.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          pool_params:
            type: object
            properties:
              quote_ticker:
                type: string
              base_lpt_mint_fee:
                type: string
              base_lpt_redeem_fee:
                type: string
              borrowing_fee_rate_per_hour:
                type: string
              report_liquidation_reward_rate:
                type: string
              report_levy_period_reward_rate:
                type: string
              accepted_assets_conf:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    target_weight:
                      type: string
              levy_period_required_seconds:
                type: string
                format: uint64
          perpetual_futures:
            type: object
            properties:
              commission_rate:
                type: string
              margin_maintenance_rate:
                type: string
              imaginary_funding_rate_proportional_coefficient:
                type: string
              markets:
                type: array
                items:
                  type: object
                  properties:
                    base_denom:
                      type: string
                    quote_denom:
                      type: string
              max_leverage:
                type: integer
                format: int64
          perpetual_options:
            type: object
            properties:
              premium_commission_rate:
                type: string
              strike_commission_rate:
                type: string
              margin_maintenance_rate:
                type: string
              imaginary_funding_rate_proportional_coefficient:
                type: string
              markets:
                type: array
                items:
                  type: object
                  properties:
                    base_denom:
                      type: string
                    quote_denom:
                      type: string
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  ununifi.derivatives.QueryPendingPaymentPositionResponse:
    type: object
    properties:
      pending_payment_position:
        type: object
        properties:
          id:
            type: string
          refundable_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          created_at:
            type: string
            format: date-time
          created_height:
            type: string
            format: uint64
  ununifi.derivatives.QueryPerpetualFuturesMarketResponse:
    type: object
    properties:
      price:
        type: string
      metrics_quote_ticker:
        type: string
      long_positions:
        type: string
      short_positions:
        type: string
  ununifi.derivatives.QueryPerpetualFuturesPositionSizeResponse:
    type: object
    properties:
      total_position_size_usd:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.derivatives.QueryPerpetualFuturesResponse:
    type: object
    properties:
      metrics_quote_ticker:
        type: string
      long_positions:
        type: string
      short_positions:
        type: string
  ununifi.derivatives.QueryPerpetualOptionsMarketResponse:
    type: object
  ununifi.derivatives.QueryPerpetualOptionsResponse:
    type: object
  ununifi.derivatives.QueryPoolResponse:
    type: object
    properties:
      metrics_quote_ticker:
        type: string
      pool_market_cap:
        type: object
        properties:
          quote_ticker:
            type: string
          total:
            type: string
          asset_info:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
                price:
                  type: string
                reserved:
                  type: string
  ununifi.derivatives.QueryPositionResponse:
    type: object
    properties:
      position:
        type: object
        properties:
          id:
            type: string
          market:
            type: object
            properties:
              base_denom:
                type: string
              quote_denom:
                type: string
          opener_address:
            type: string
          opened_at:
            type: string
            format: date-time
          opened_height:
            type: string
            format: uint64
          opened_base_rate:
            type: string
          opened_quote_rate:
            type: string
          remaining_margin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          levied_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          levied_amount_negative:
            type: boolean
          last_levied_at:
            type: string
            format: date-time
          position_instance:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON


              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      valuation_profit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      margin_maintenance_rate:
        type: string
      effective_margin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.ecosystemincentive.Params:
    type: object
    properties:
      reward_params:
        type: array
        items:
          type: object
          properties:
            module_name:
              type: string
            reward_rate:
              type: array
              items:
                type: object
                properties:
                  reward_type:
                    type: string
                    enum:
                      - UNKNOWN
                      - STAKERS
                      - FRONTEND_DEVELOPERS
                      - COMMUNITY_POOL
                    default: UNKNOWN
                    description: >-
                      STAKERS type reward will be distributed for the stakers of
                      GUU token.

                      FRONTEND_DEVELOPERS type reward will be disributed for the
                      creators of frontend of UnUniFi's services.

                      COMMUNITY_POOL type reward will be distributed for the
                      community pool.
                  rate:
                    type: string
                title: >-
                  RewardRate defines the ratio to take reward for a specific
                  reward_type.

                  The total sum of reward_rate in a module cannot be exceed 1
          title: >-
            RewardParams defines which module have which rewards type and rate 

            to maintain the correctness of the fee rate in a module

            e.g. if nftbackedloan module have "Frontend" and "Collection"
            incentive, 

            the combined those rates for the incentive cannot be exceed 1
    description: Params defines the parameters for the module.
  ununifi.ecosystemincentive.QueryEcosystemRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  ununifi.ecosystemincentive.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          reward_params:
            type: array
            items:
              type: object
              properties:
                module_name:
                  type: string
                reward_rate:
                  type: array
                  items:
                    type: object
                    properties:
                      reward_type:
                        type: string
                        enum:
                          - UNKNOWN
                          - STAKERS
                          - FRONTEND_DEVELOPERS
                          - COMMUNITY_POOL
                        default: UNKNOWN
                        description: >-
                          STAKERS type reward will be distributed for the
                          stakers of GUU token.

                          FRONTEND_DEVELOPERS type reward will be disributed for
                          the creators of frontend of UnUniFi's services.

                          COMMUNITY_POOL type reward will be distributed for the
                          community pool.
                      rate:
                        type: string
                    title: >-
                      RewardRate defines the ratio to take reward for a specific
                      reward_type.

                      The total sum of reward_rate in a module cannot be exceed
                      1
              title: >-
                RewardParams defines which module have which rewards type and
                rate 

                to maintain the correctness of the fee rate in a module

                e.g. if nftbackedloan module have "Frontend" and "Collection"
                incentive, 

                the combined those rates for the incentive cannot be exceed 1
  ununifi.ecosystemincentive.QueryRecipientAddressWithNftIdResponse:
    type: object
    properties:
      address:
        type: string
  ununifi.ecosystemincentive.RewardParams:
    type: object
    properties:
      module_name:
        type: string
      reward_rate:
        type: array
        items:
          type: object
          properties:
            reward_type:
              type: string
              enum:
                - UNKNOWN
                - STAKERS
                - FRONTEND_DEVELOPERS
                - COMMUNITY_POOL
              default: UNKNOWN
              description: >-
                STAKERS type reward will be distributed for the stakers of GUU
                token.

                FRONTEND_DEVELOPERS type reward will be disributed for the
                creators of frontend of UnUniFi's services.

                COMMUNITY_POOL type reward will be distributed for the community
                pool.
            rate:
              type: string
          title: >-
            RewardRate defines the ratio to take reward for a specific
            reward_type.

            The total sum of reward_rate in a module cannot be exceed 1
    title: |-
      RewardParams defines which module have which rewards type and rate 
      to maintain the correctness of the fee rate in a module
      e.g. if nftbackedloan module have "Frontend" and "Collection" incentive, 
      the combined those rates for the incentive cannot be exceed 1
  ununifi.ecosystemincentive.RewardRate:
    type: object
    properties:
      reward_type:
        type: string
        enum:
          - UNKNOWN
          - STAKERS
          - FRONTEND_DEVELOPERS
          - COMMUNITY_POOL
        default: UNKNOWN
        description: >-
          STAKERS type reward will be distributed for the stakers of GUU token.

          FRONTEND_DEVELOPERS type reward will be disributed for the creators of
          frontend of UnUniFi's services.

          COMMUNITY_POOL type reward will be distributed for the community pool.
      rate:
        type: string
    title: |-
      RewardRate defines the ratio to take reward for a specific reward_type.
      The total sum of reward_rate in a module cannot be exceed 1
  ununifi.ecosystemincentive.RewardType:
    type: string
    enum:
      - UNKNOWN
      - STAKERS
      - FRONTEND_DEVELOPERS
      - COMMUNITY_POOL
    default: UNKNOWN
    description: >-
      STAKERS type reward will be distributed for the stakers of GUU token.

      FRONTEND_DEVELOPERS type reward will be disributed for the creators of
      frontend of UnUniFi's services.

      COMMUNITY_POOL type reward will be distributed for the community pool.
  ununifi.nftbackedloan.Bid:
    type: object
    properties:
      id:
        type: object
        properties:
          nft_id:
            type: object
            properties:
              class_id:
                type: string
              token_id:
                type: string
          bidder:
            type: string
      price:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      deposit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      paid_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      expiry:
        type: string
        format: date-time
      interest_rate:
        type: string
      automatic_payment:
        type: boolean
      created_at:
        type: string
        format: date-time
      loan:
        title: borrow info
        type: object
        properties:
          amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          last_repaid_at:
            type: string
            format: date-time
  ununifi.nftbackedloan.BidId:
    type: object
    properties:
      nft_id:
        type: object
        properties:
          class_id:
            type: string
          token_id:
            type: string
      bidder:
        type: string
  ununifi.nftbackedloan.Liquidation:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      liquidation_date:
        type: string
        format: date-time
  ununifi.nftbackedloan.Liquidations:
    type: object
    properties:
      liquidation:
        type: object
        properties:
          amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          liquidation_date:
            type: string
            format: date-time
      next_liquidation:
        type: array
        items:
          type: object
          properties:
            amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            liquidation_date:
              type: string
              format: date-time
  ununifi.nftbackedloan.ListedNftDetail:
    type: object
    properties:
      listing:
        type: object
        properties:
          nft_id:
            type: object
            properties:
              class_id:
                type: string
              token_id:
                type: string
          owner:
            type: string
          state:
            type: string
            enum:
              - UNKNOWN
              - LISTING
              - BIDDING
              - SELLING_DECISION
              - LIQUIDATION
              - SUCCESSFUL_BID
            default: UNKNOWN
          bid_denom:
            type: string
          min_deposit_rate:
            type: string
          min_bid_period:
            type: string
          started_at:
            type: string
            format: date-time
          liquidated_at:
            type: string
            format: date-time
          full_payment_end_at:
            type: string
            format: date-time
          successful_bid_end_at:
            type: string
            format: date-time
          collected_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          collected_amount_negative:
            type: boolean
      nft_info:
        type: object
        properties:
          id:
            type: string
          uri:
            type: string
          uri_hash:
            type: string
  ununifi.nftbackedloan.Listing:
    type: object
    properties:
      nft_id:
        type: object
        properties:
          class_id:
            type: string
          token_id:
            type: string
      owner:
        type: string
      state:
        type: string
        enum:
          - UNKNOWN
          - LISTING
          - BIDDING
          - SELLING_DECISION
          - LIQUIDATION
          - SUCCESSFUL_BID
        default: UNKNOWN
      bid_denom:
        type: string
      min_deposit_rate:
        type: string
      min_bid_period:
        type: string
      started_at:
        type: string
        format: date-time
      liquidated_at:
        type: string
        format: date-time
      full_payment_end_at:
        type: string
        format: date-time
      successful_bid_end_at:
        type: string
        format: date-time
      collected_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      collected_amount_negative:
        type: boolean
  ununifi.nftbackedloan.ListingState:
    type: string
    enum:
      - UNKNOWN
      - LISTING
      - BIDDING
      - SELLING_DECISION
      - LIQUIDATION
      - SUCCESSFUL_BID
    default: UNKNOWN
  ununifi.nftbackedloan.Loan:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      last_repaid_at:
        type: string
        format: date-time
  ununifi.nftbackedloan.NftId:
    type: object
    properties:
      class_id:
        type: string
      token_id:
        type: string
  ununifi.nftbackedloan.NftInfo:
    type: object
    properties:
      id:
        type: string
      uri:
        type: string
      uri_hash:
        type: string
  ununifi.nftbackedloan.Params:
    type: object
    properties:
      min_staking_for_listing:
        type: string
      bid_tokens:
        type: array
        items:
          type: string
      nft_listing_cancel_required_seconds:
        type: string
        format: uint64
      bid_cancel_required_seconds:
        type: string
        format: uint64
      nft_listing_full_payment_period:
        type: string
        format: uint64
      nft_listing_nft_delivery_period:
        type: string
        format: uint64
      nft_listing_commission_rate:
        type: string
  ununifi.nftbackedloan.QueryBidderBidsResponse:
    type: object
    properties:
      bids:
        type: array
        items:
          type: object
          properties:
            id:
              type: object
              properties:
                nft_id:
                  type: object
                  properties:
                    class_id:
                      type: string
                    token_id:
                      type: string
                bidder:
                  type: string
            price:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            deposit:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            paid_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            expiry:
              type: string
              format: date-time
            interest_rate:
              type: string
            automatic_payment:
              type: boolean
            created_at:
              type: string
              format: date-time
            loan:
              title: borrow info
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                last_repaid_at:
                  type: string
                  format: date-time
  ununifi.nftbackedloan.QueryLiquidationResponse:
    type: object
    properties:
      liquidations:
        type: object
        properties:
          liquidation:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              liquidation_date:
                type: string
                format: date-time
          next_liquidation:
            type: array
            items:
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                liquidation_date:
                  type: string
                  format: date-time
  ununifi.nftbackedloan.QueryListedClassResponse:
    type: object
    properties:
      class_id:
        type: string
      name:
        type: string
      description:
        type: string
      symbol:
        type: string
      uri:
        type: string
      urihash:
        type: string
      nfts:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            uri:
              type: string
            uri_hash:
              type: string
      nft_count:
        type: string
        format: uint64
  ununifi.nftbackedloan.QueryListedClassesResponse:
    type: object
    properties:
      classes:
        type: array
        items:
          type: object
          properties:
            class_id:
              type: string
            name:
              type: string
            description:
              type: string
            symbol:
              type: string
            uri:
              type: string
            urihash:
              type: string
            nfts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  uri:
                    type: string
                  uri_hash:
                    type: string
            nft_count:
              type: string
              format: uint64
  ununifi.nftbackedloan.QueryListedNftResponse:
    type: object
    properties:
      listing:
        type: object
        properties:
          nft_id:
            type: object
            properties:
              class_id:
                type: string
              token_id:
                type: string
          owner:
            type: string
          state:
            type: string
            enum:
              - UNKNOWN
              - LISTING
              - BIDDING
              - SELLING_DECISION
              - LIQUIDATION
              - SUCCESSFUL_BID
            default: UNKNOWN
          bid_denom:
            type: string
          min_deposit_rate:
            type: string
          min_bid_period:
            type: string
          started_at:
            type: string
            format: date-time
          liquidated_at:
            type: string
            format: date-time
          full_payment_end_at:
            type: string
            format: date-time
          successful_bid_end_at:
            type: string
            format: date-time
          collected_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          collected_amount_negative:
            type: boolean
  ununifi.nftbackedloan.QueryListedNftsResponse:
    type: object
    properties:
      listings:
        type: array
        items:
          type: object
          properties:
            listing:
              type: object
              properties:
                nft_id:
                  type: object
                  properties:
                    class_id:
                      type: string
                    token_id:
                      type: string
                owner:
                  type: string
                state:
                  type: string
                  enum:
                    - UNKNOWN
                    - LISTING
                    - BIDDING
                    - SELLING_DECISION
                    - LIQUIDATION
                    - SUCCESSFUL_BID
                  default: UNKNOWN
                bid_denom:
                  type: string
                min_deposit_rate:
                  type: string
                min_bid_period:
                  type: string
                started_at:
                  type: string
                  format: date-time
                liquidated_at:
                  type: string
                  format: date-time
                full_payment_end_at:
                  type: string
                  format: date-time
                successful_bid_end_at:
                  type: string
                  format: date-time
                collected_amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                collected_amount_negative:
                  type: boolean
            nft_info:
              type: object
              properties:
                id:
                  type: string
                uri:
                  type: string
                uri_hash:
                  type: string
  ununifi.nftbackedloan.QueryLoanResponse:
    type: object
    properties:
      nft_id:
        type: object
        properties:
          class_id:
            type: string
          token_id:
            type: string
      borrowing_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      borrowing_limit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      total_deposit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.nftbackedloan.QueryNftBidsResponse:
    type: object
    properties:
      bids:
        type: array
        items:
          type: object
          properties:
            id:
              type: object
              properties:
                nft_id:
                  type: object
                  properties:
                    class_id:
                      type: string
                    token_id:
                      type: string
                bidder:
                  type: string
            price:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            deposit:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            paid_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            expiry:
              type: string
              format: date-time
            interest_rate:
              type: string
            automatic_payment:
              type: boolean
            created_at:
              type: string
              format: date-time
            loan:
              title: borrow info
              type: object
              properties:
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                last_repaid_at:
                  type: string
                  format: date-time
  ununifi.nftbackedloan.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          min_staking_for_listing:
            type: string
          bid_tokens:
            type: array
            items:
              type: string
          nft_listing_cancel_required_seconds:
            type: string
            format: uint64
          bid_cancel_required_seconds:
            type: string
            format: uint64
          nft_listing_full_payment_period:
            type: string
            format: uint64
          nft_listing_nft_delivery_period:
            type: string
            format: uint64
          nft_listing_commission_rate:
            type: string
  ununifi.nftbackedloan.QueryRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  ununifi.nftfactory.ClassAuthorityMetadata:
    type: object
    properties:
      Admin:
        type: string
        title: Can be empty for no admin, or a valid address
    description: |-
      ClassAuthorityMetadata specifies metadata for addresses that have specific
      capabilities over a nft factory class. Right now there is only one Admin
      permission, but is planned to be extended to the future.
  ununifi.nftfactory.Params:
    type: object
    properties:
      class_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: >-
          ClassCreationFee is the fee required to create a new denom using the
          nftfactory module
      fee_collector_address:
        type: string
        title: >-
          FeeCollectorAddress is the address where fees collected from denom
          creation are sent to
  ununifi.nftfactory.QueryClassAuthorityMetadataResponse:
    type: object
    properties:
      authority_metadata:
        type: object
        properties:
          Admin:
            type: string
            title: Can be empty for no admin, or a valid address
        description: >-
          ClassAuthorityMetadata specifies metadata for addresses that have
          specific

          capabilities over a nft factory class. Right now there is only one
          Admin

          permission, but is planned to be extended to the future.
  ununifi.nftfactory.QueryClassesFromCreatorResponse:
    type: object
    properties:
      classes:
        type: array
        items:
          type: string
  ununifi.nftfactory.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          class_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: >-
              ClassCreationFee is the fee required to create a new denom using
              the nftfactory module
          fee_collector_address:
            type: string
            title: >-
              FeeCollectorAddress is the address where fees collected from denom
              creation are sent to
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  ununifi.pricefeed.CurrentPrice:
    type: object
    properties:
      market_id:
        type: string
      price:
        type: string
  ununifi.pricefeed.Market:
    type: object
    properties:
      market_id:
        type: string
      base_asset:
        type: string
      quote_asset:
        type: string
      oracles:
        type: array
        items:
          type: string
      active:
        type: boolean
  ununifi.pricefeed.Params:
    type: object
    properties:
      deposit_for_posting:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      markets:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            base_asset:
              type: string
            quote_asset:
              type: string
            oracles:
              type: array
              items:
                type: string
            active:
              type: boolean
  ununifi.pricefeed.PostedPrice:
    type: object
    properties:
      market_id:
        type: string
      oracle_address:
        type: string
      price:
        type: string
      expiry:
        type: string
        format: date-time
  ununifi.pricefeed.QueryAllMarketResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            base_asset:
              type: string
            quote_asset:
              type: string
            oracles:
              type: array
              items:
                type: string
            active:
              type: boolean
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.pricefeed.QueryAllOracleResponse:
    type: object
    properties:
      oracles:
        type: array
        items:
          type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.pricefeed.QueryAllPriceResponse:
    type: object
    properties:
      prices:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            price:
              type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.pricefeed.QueryAllRawPriceResponse:
    type: object
    properties:
      prices:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            oracle_address:
              type: string
            price:
              type: string
            expiry:
              type: string
              format: date-time
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.pricefeed.QueryGetPriceResponse:
    type: object
    properties:
      price:
        type: object
        properties:
          market_id:
            type: string
          price:
            type: string
  ununifi.pricefeed.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          deposit_for_posting:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          markets:
            type: array
            items:
              type: object
              properties:
                market_id:
                  type: string
                base_asset:
                  type: string
                quote_asset:
                  type: string
                oracles:
                  type: array
                  items:
                    type: string
                active:
                  type: boolean
  ununifi.yieldaggregator.ChainAddress:
    type: object
    properties:
      chain_id:
        type: string
      address:
        type: string
  ununifi.yieldaggregator.DenomInfo:
    type: object
    properties:
      denom:
        type: string
      symbol:
        type: string
      channels:
        type: array
        items:
          type: object
          properties:
            send_chain_id:
              type: string
            recv_chain_id:
              type: string
            channel_id:
              type: string
  ununifi.yieldaggregator.Params:
    type: object
    properties:
      commission_rate:
        type: string
        title: |-
          TODO: add deposit_commission_rate
          TODO: add reserve_annual_commission_rate
          TODO: rename to withdraw_commission_rate
      vault_creation_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      vault_creation_deposit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      fee_collector_address:
        type: string
      ibc_transfer_timeout_nanos:
        type: string
        format: uint64
  ununifi.yieldaggregator.QueryAllStrategyResponse:
    type: object
    properties:
      strategies:
        type: array
        items:
          type: object
          properties:
            strategy:
              type: object
              properties:
                denom:
                  type: string
                id:
                  type: string
                  format: uint64
                contract_address:
                  type: string
                name:
                  type: string
                description:
                  type: string
                git_url:
                  type: string
            deposit_fee_rate:
              type: string
            withdraw_fee_rate:
              type: string
            performance_fee_rate:
              type: string
            symbol:
              type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.yieldaggregator.QueryAllVaultByShareHolderResponse:
    type: object
    properties:
      vaults:
        type: array
        items:
          type: object
          properties:
            vault:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                symbol:
                  type: string
                name:
                  type: string
                description:
                  type: string
                owner:
                  type: string
                owner_deposit:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                withdraw_commission_rate:
                  type: string
                withdraw_reserve_rate:
                  type: string
                strategy_weights:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      strategy_id:
                        type: string
                        format: uint64
                      weight:
                        type: string
                fee_collector_address:
                  type: string
            total_bonded_amount:
              type: string
            total_unbonding_amount:
              type: string
            withdraw_reserve:
              type: string
            total_pending_deposit:
              type: string
  ununifi.yieldaggregator.QueryAllVaultResponse:
    type: object
    properties:
      vaults:
        type: array
        items:
          type: object
          properties:
            vault:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                symbol:
                  type: string
                name:
                  type: string
                description:
                  type: string
                owner:
                  type: string
                owner_deposit:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                withdraw_commission_rate:
                  type: string
                withdraw_reserve_rate:
                  type: string
                strategy_weights:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      strategy_id:
                        type: string
                        format: uint64
                      weight:
                        type: string
                fee_collector_address:
                  type: string
            total_bonded_amount:
              type: string
            total_unbonding_amount:
              type: string
            withdraw_reserve:
              type: string
            total_pending_deposit:
              type: string
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  ununifi.yieldaggregator.QueryDenomInfosResponse:
    type: object
    properties:
      info:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            symbol:
              type: string
            channels:
              type: array
              items:
                type: object
                properties:
                  send_chain_id:
                    type: string
                  recv_chain_id:
                    type: string
                  channel_id:
                    type: string
  ununifi.yieldaggregator.QueryEstimateMintAmountResponse:
    type: object
    properties:
      mint_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.yieldaggregator.QueryEstimateRedeemAmountResponse:
    type: object
    properties:
      share_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      fee:
        type: string
      redeem_amount:
        type: string
      total_amount:
        type: string
      symbol:
        type: string
  ununifi.yieldaggregator.QueryGetStrategyResponse:
    type: object
    properties:
      strategy:
        type: object
        properties:
          strategy:
            type: object
            properties:
              denom:
                type: string
              id:
                type: string
                format: uint64
              contract_address:
                type: string
              name:
                type: string
              description:
                type: string
              git_url:
                type: string
          deposit_fee_rate:
            type: string
          withdraw_fee_rate:
            type: string
          performance_fee_rate:
            type: string
          symbol:
            type: string
  ununifi.yieldaggregator.QueryGetVaultResponse:
    type: object
    properties:
      vault:
        type: object
        properties:
          id:
            type: string
            format: uint64
          symbol:
            type: string
          name:
            type: string
          description:
            type: string
          owner:
            type: string
          owner_deposit:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          withdraw_commission_rate:
            type: string
          withdraw_reserve_rate:
            type: string
          strategy_weights:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                strategy_id:
                  type: string
                  format: uint64
                weight:
                  type: string
          fee_collector_address:
            type: string
      total_bonded_amount:
        type: string
      total_unbonding_amount:
        type: string
      withdraw_reserve:
        type: string
      total_pending_deposit:
        type: string
      strategies:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            id:
              type: string
              format: uint64
            contract_address:
              type: string
            name:
              type: string
            description:
              type: string
            git_url:
              type: string
  ununifi.yieldaggregator.QueryIntermediaryAccountInfoResponse:
    type: object
    properties:
      addrs:
        type: array
        items:
          type: object
          properties:
            chain_id:
              type: string
            address:
              type: string
  ununifi.yieldaggregator.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          commission_rate:
            type: string
            title: |-
              TODO: add deposit_commission_rate
              TODO: add reserve_annual_commission_rate
              TODO: rename to withdraw_commission_rate
          vault_creation_fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          vault_creation_deposit:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          fee_collector_address:
            type: string
          ibc_transfer_timeout_nanos:
            type: string
            format: uint64
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  ununifi.yieldaggregator.QuerySymbolInfosResponse:
    type: object
    properties:
      info:
        type: array
        items:
          type: object
          properties:
            symbol:
              type: string
            native_chain_id:
              type: string
            channels:
              type: array
              items:
                type: object
                properties:
                  send_chain_id:
                    type: string
                  recv_chain_id:
                    type: string
                  channel_id:
                    type: string
  ununifi.yieldaggregator.Strategy:
    type: object
    properties:
      denom:
        type: string
      id:
        type: string
        format: uint64
      contract_address:
        type: string
      name:
        type: string
      description:
        type: string
      git_url:
        type: string
  ununifi.yieldaggregator.StrategyContainer:
    type: object
    properties:
      strategy:
        type: object
        properties:
          denom:
            type: string
          id:
            type: string
            format: uint64
          contract_address:
            type: string
          name:
            type: string
          description:
            type: string
          git_url:
            type: string
      deposit_fee_rate:
        type: string
      withdraw_fee_rate:
        type: string
      performance_fee_rate:
        type: string
      symbol:
        type: string
  ununifi.yieldaggregator.StrategyWeight:
    type: object
    properties:
      denom:
        type: string
      strategy_id:
        type: string
        format: uint64
      weight:
        type: string
  ununifi.yieldaggregator.SymbolInfo:
    type: object
    properties:
      symbol:
        type: string
      native_chain_id:
        type: string
      channels:
        type: array
        items:
          type: object
          properties:
            send_chain_id:
              type: string
            recv_chain_id:
              type: string
            channel_id:
              type: string
  ununifi.yieldaggregator.TransferChannel:
    type: object
    properties:
      send_chain_id:
        type: string
      recv_chain_id:
        type: string
      channel_id:
        type: string
  ununifi.yieldaggregator.Vault:
    type: object
    properties:
      id:
        type: string
        format: uint64
      symbol:
        type: string
      name:
        type: string
      description:
        type: string
      owner:
        type: string
      owner_deposit:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      withdraw_commission_rate:
        type: string
      withdraw_reserve_rate:
        type: string
      strategy_weights:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            strategy_id:
              type: string
              format: uint64
            weight:
              type: string
      fee_collector_address:
        type: string
  ununifi.yieldaggregator.VaultContainer:
    type: object
    properties:
      vault:
        type: object
        properties:
          id:
            type: string
            format: uint64
          symbol:
            type: string
          name:
            type: string
          description:
            type: string
          owner:
            type: string
          owner_deposit:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          withdraw_commission_rate:
            type: string
          withdraw_reserve_rate:
            type: string
          strategy_weights:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                strategy_id:
                  type: string
                  format: uint64
                weight:
                  type: string
          fee_collector_address:
            type: string
      total_bonded_amount:
        type: string
      total_unbonding_amount:
        type: string
      withdraw_reserve:
        type: string
      total_pending_deposit:
        type: string
  ununifi.irs.InterestRateSwapVault:
    type: object
    properties:
      strategy_contract:
        type: string
      name:
        type: string
      description:
        type: string
      max_maturity:
        type: string
        format: uint64
      cycle:
        type: string
        format: uint64
      last_tranche_time:
        type: string
        format: uint64
      denom:
        type: string
      deposit_denom:
        type: string
  ununifi.irs.Params:
    type: object
    properties:
      authority:
        type: string
      trade_fee_rate:
        type: string
  ununifi.irs.QueryEstimateMintLiquidityPoolTokenResponse:
    type: object
    properties:
      mint_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      additional_required_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateMintPtYtPairResponse:
    type: object
    properties:
      pt_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      yt_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateRedeemLiquidityPoolTokenResponse:
    type: object
    properties:
      redeem_amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  ununifi.irs.QueryEstimateRedeemMaturedYtResponse:
    type: object
    properties:
      redeem_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateRedeemPtYtPairResponse:
    type: object
    properties:
      redeem_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      additional_required_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateRequiredDepositSwapToYtResponse:
    type: object
    properties:
      required_deposit_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateSwapInPoolResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryEstimateSwapToYtResponse:
    type: object
    properties:
      yt_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  ununifi.irs.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          authority:
            type: string
          trade_fee_rate:
            type: string
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  ununifi.irs.QueryTranchePoolAPYsResponse:
    type: object
    properties:
      liquidity_apy:
        type: string
      discount_pt_apy:
        type: string
      liquidity_rate_per_deposit:
        type: string
      deposit_token_percentage_in_pool:
        type: string
      pt_percentage_in_pool:
        type: string
  ununifi.irs.QueryTranchePtAPYsResponse:
    type: object
    properties:
      pt_apy:
        type: string
      pt_rate_per_deposit:
        type: string
  ununifi.irs.QueryTrancheResponse:
    type: object
    properties:
      tranche:
        type: object
        properties:
          id:
            type: string
            format: uint64
          strategy_contract:
            type: string
          start_time:
            type: string
            format: uint64
          maturity:
            type: string
            format: uint64
          swap_fee:
            type: string
          exit_fee:
            type: string
          total_shares:
            title: sum of all LP tokens sent out
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          pool_assets:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: Pool assets are sorted by denomination
          denom:
            type: string
          deposit_denom:
            type: string
    description: QueryTranchResponse is response type for the Query/Tranch RPC method.
  ununifi.irs.QueryTrancheYtAPYsResponse:
    type: object
    properties:
      yt_apy:
        type: string
      yt_rate_per_deposit:
        type: string
      ls_apy:
        type: string
  ununifi.irs.QueryTranchesResponse:
    type: object
    properties:
      tranches:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            strategy_contract:
              type: string
            start_time:
              type: string
              format: uint64
            maturity:
              type: string
              format: uint64
            swap_fee:
              type: string
            exit_fee:
              type: string
            total_shares:
              title: sum of all LP tokens sent out
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            pool_assets:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: Pool assets are sorted by denomination
            denom:
              type: string
            deposit_denom:
              type: string
    description: QueryTranchesResponse is response type for the Query/Tranches RPC method.
  ununifi.irs.QueryVaultByContractResponse:
    type: object
    properties:
      vault:
        type: object
        properties:
          strategy_contract:
            type: string
          name:
            type: string
          description:
            type: string
          max_maturity:
            type: string
            format: uint64
          cycle:
            type: string
            format: uint64
          last_tranche_time:
            type: string
            format: uint64
          denom:
            type: string
          deposit_denom:
            type: string
    description: QueryVaultResponse is response type for the Query/Vault RPC method.
  ununifi.irs.QueryVaultDetailsResponse:
    type: object
    properties:
      liquidity_pool:
        type: string
      fy_rate:
        type: string
      lvy_rate:
        type: string
    description: >-
      QueryVaultDetailsResponse is response type for the Query/VaultDetails RPC
      method.
  ununifi.irs.QueryVaultsResponse:
    type: object
    properties:
      vaults:
        type: array
        items:
          type: object
          properties:
            strategy_contract:
              type: string
            name:
              type: string
            description:
              type: string
            max_maturity:
              type: string
              format: uint64
            cycle:
              type: string
              format: uint64
            last_tranche_time:
              type: string
              format: uint64
            denom:
              type: string
            deposit_denom:
              type: string
    description: QueryVaultsResponse is response type for the Query/Vaults RPC method.
  ununifi.irs.TranchePool:
    type: object
    properties:
      id:
        type: string
        format: uint64
      strategy_contract:
        type: string
      start_time:
        type: string
        format: uint64
      maturity:
        type: string
        format: uint64
      swap_fee:
        type: string
      exit_fee:
        type: string
      total_shares:
        title: sum of all LP tokens sent out
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      pool_assets:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: Pool assets are sorted by denomination
      denom:
        type: string
      deposit_denom:
        type: string
