// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yieldaggregatorv1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_UnUniFi_chain_types "github.com/UnUniFi/chain/deprecated/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgDeposit struct {
	FromAddress   github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	Amount        []types.Coin                                    `protobuf:"bytes,2,rep,name=amount,proto3" json:"amount"`
	ExecuteOrders bool                                            `protobuf:"varint,3,opt,name=execute_orders,json=executeOrders,proto3" json:"execute_orders,omitempty"`
}

func (m *MsgDeposit) Reset()         { *m = MsgDeposit{} }
func (m *MsgDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgDeposit) ProtoMessage()    {}
func (*MsgDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{0}
}
func (m *MsgDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeposit.Merge(m, src)
}
func (m *MsgDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeposit proto.InternalMessageInfo

func (m *MsgDeposit) GetAmount() []types.Coin {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *MsgDeposit) GetExecuteOrders() bool {
	if m != nil {
		return m.ExecuteOrders
	}
	return false
}

type MsgDepositResponse struct {
}

func (m *MsgDepositResponse) Reset()         { *m = MsgDepositResponse{} }
func (m *MsgDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDepositResponse) ProtoMessage()    {}
func (*MsgDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{1}
}
func (m *MsgDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositResponse.Merge(m, src)
}
func (m *MsgDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositResponse proto.InternalMessageInfo

type MsgWithdraw struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	Amount      []types.Coin                                    `protobuf:"bytes,2,rep,name=amount,proto3" json:"amount"`
}

func (m *MsgWithdraw) Reset()         { *m = MsgWithdraw{} }
func (m *MsgWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgWithdraw) ProtoMessage()    {}
func (*MsgWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{2}
}
func (m *MsgWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdraw.Merge(m, src)
}
func (m *MsgWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdraw proto.InternalMessageInfo

func (m *MsgWithdraw) GetAmount() []types.Coin {
	if m != nil {
		return m.Amount
	}
	return nil
}

type MsgWithdrawResponse struct {
}

func (m *MsgWithdrawResponse) Reset()         { *m = MsgWithdrawResponse{} }
func (m *MsgWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawResponse) ProtoMessage()    {}
func (*MsgWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{3}
}
func (m *MsgWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawResponse.Merge(m, src)
}
func (m *MsgWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawResponse proto.InternalMessageInfo

type MsgAddFarmingOrder struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	Order       *FarmingOrder                                   `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (m *MsgAddFarmingOrder) Reset()         { *m = MsgAddFarmingOrder{} }
func (m *MsgAddFarmingOrder) String() string { return proto.CompactTextString(m) }
func (*MsgAddFarmingOrder) ProtoMessage()    {}
func (*MsgAddFarmingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{4}
}
func (m *MsgAddFarmingOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddFarmingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddFarmingOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddFarmingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddFarmingOrder.Merge(m, src)
}
func (m *MsgAddFarmingOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddFarmingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddFarmingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddFarmingOrder proto.InternalMessageInfo

func (m *MsgAddFarmingOrder) GetOrder() *FarmingOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type MsgAddFarmingOrderResponse struct {
}

func (m *MsgAddFarmingOrderResponse) Reset()         { *m = MsgAddFarmingOrderResponse{} }
func (m *MsgAddFarmingOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddFarmingOrderResponse) ProtoMessage()    {}
func (*MsgAddFarmingOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{5}
}
func (m *MsgAddFarmingOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddFarmingOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddFarmingOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddFarmingOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddFarmingOrderResponse.Merge(m, src)
}
func (m *MsgAddFarmingOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddFarmingOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddFarmingOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddFarmingOrderResponse proto.InternalMessageInfo

type MsgDeleteFarmingOrder struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	OrderId     string                                          `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgDeleteFarmingOrder) Reset()         { *m = MsgDeleteFarmingOrder{} }
func (m *MsgDeleteFarmingOrder) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteFarmingOrder) ProtoMessage()    {}
func (*MsgDeleteFarmingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{6}
}
func (m *MsgDeleteFarmingOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteFarmingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteFarmingOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteFarmingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteFarmingOrder.Merge(m, src)
}
func (m *MsgDeleteFarmingOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteFarmingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteFarmingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteFarmingOrder proto.InternalMessageInfo

func (m *MsgDeleteFarmingOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type MsgDeleteFarmingOrderResponse struct {
}

func (m *MsgDeleteFarmingOrderResponse) Reset()         { *m = MsgDeleteFarmingOrderResponse{} }
func (m *MsgDeleteFarmingOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteFarmingOrderResponse) ProtoMessage()    {}
func (*MsgDeleteFarmingOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{7}
}
func (m *MsgDeleteFarmingOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteFarmingOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteFarmingOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteFarmingOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteFarmingOrderResponse.Merge(m, src)
}
func (m *MsgDeleteFarmingOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteFarmingOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteFarmingOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteFarmingOrderResponse proto.InternalMessageInfo

type MsgActivateFarmingOrder struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	OrderId     string                                          `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgActivateFarmingOrder) Reset()         { *m = MsgActivateFarmingOrder{} }
func (m *MsgActivateFarmingOrder) String() string { return proto.CompactTextString(m) }
func (*MsgActivateFarmingOrder) ProtoMessage()    {}
func (*MsgActivateFarmingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{8}
}
func (m *MsgActivateFarmingOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateFarmingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateFarmingOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateFarmingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateFarmingOrder.Merge(m, src)
}
func (m *MsgActivateFarmingOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateFarmingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateFarmingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateFarmingOrder proto.InternalMessageInfo

func (m *MsgActivateFarmingOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type MsgActivateFarmingOrderResponse struct {
}

func (m *MsgActivateFarmingOrderResponse) Reset()         { *m = MsgActivateFarmingOrderResponse{} }
func (m *MsgActivateFarmingOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgActivateFarmingOrderResponse) ProtoMessage()    {}
func (*MsgActivateFarmingOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{9}
}
func (m *MsgActivateFarmingOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateFarmingOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateFarmingOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateFarmingOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateFarmingOrderResponse.Merge(m, src)
}
func (m *MsgActivateFarmingOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateFarmingOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateFarmingOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateFarmingOrderResponse proto.InternalMessageInfo

type MsgInactivateFarmingOrder struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	OrderId     string                                          `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgInactivateFarmingOrder) Reset()         { *m = MsgInactivateFarmingOrder{} }
func (m *MsgInactivateFarmingOrder) String() string { return proto.CompactTextString(m) }
func (*MsgInactivateFarmingOrder) ProtoMessage()    {}
func (*MsgInactivateFarmingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{10}
}
func (m *MsgInactivateFarmingOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInactivateFarmingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInactivateFarmingOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInactivateFarmingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInactivateFarmingOrder.Merge(m, src)
}
func (m *MsgInactivateFarmingOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgInactivateFarmingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInactivateFarmingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInactivateFarmingOrder proto.InternalMessageInfo

func (m *MsgInactivateFarmingOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type MsgInactivateFarmingOrderResponse struct {
}

func (m *MsgInactivateFarmingOrderResponse) Reset()         { *m = MsgInactivateFarmingOrderResponse{} }
func (m *MsgInactivateFarmingOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInactivateFarmingOrderResponse) ProtoMessage()    {}
func (*MsgInactivateFarmingOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{11}
}
func (m *MsgInactivateFarmingOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInactivateFarmingOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInactivateFarmingOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInactivateFarmingOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInactivateFarmingOrderResponse.Merge(m, src)
}
func (m *MsgInactivateFarmingOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInactivateFarmingOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInactivateFarmingOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInactivateFarmingOrderResponse proto.InternalMessageInfo

type MsgExecuteFarmingOrders struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	OrderIds    []string                                        `protobuf:"bytes,2,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (m *MsgExecuteFarmingOrders) Reset()         { *m = MsgExecuteFarmingOrders{} }
func (m *MsgExecuteFarmingOrders) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteFarmingOrders) ProtoMessage()    {}
func (*MsgExecuteFarmingOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{12}
}
func (m *MsgExecuteFarmingOrders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteFarmingOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteFarmingOrders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteFarmingOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteFarmingOrders.Merge(m, src)
}
func (m *MsgExecuteFarmingOrders) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteFarmingOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteFarmingOrders.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteFarmingOrders proto.InternalMessageInfo

func (m *MsgExecuteFarmingOrders) GetOrderIds() []string {
	if m != nil {
		return m.OrderIds
	}
	return nil
}

type MsgExecuteFarmingOrdersResponse struct {
}

func (m *MsgExecuteFarmingOrdersResponse) Reset()         { *m = MsgExecuteFarmingOrdersResponse{} }
func (m *MsgExecuteFarmingOrdersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteFarmingOrdersResponse) ProtoMessage()    {}
func (*MsgExecuteFarmingOrdersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{13}
}
func (m *MsgExecuteFarmingOrdersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteFarmingOrdersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteFarmingOrdersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteFarmingOrdersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteFarmingOrdersResponse.Merge(m, src)
}
func (m *MsgExecuteFarmingOrdersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteFarmingOrdersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteFarmingOrdersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteFarmingOrdersResponse proto.InternalMessageInfo

type MsgSetDailyRewardPercent struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
	AccountId   string                                          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TargetId    string                                          `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Rate        github_com_cosmos_cosmos_sdk_types.Dec          `protobuf:"bytes,4,opt,name=rate,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"rate"`
	Date        time.Time                                       `protobuf:"bytes,5,opt,name=date,proto3,stdtime" json:"date"`
}

func (m *MsgSetDailyRewardPercent) Reset()         { *m = MsgSetDailyRewardPercent{} }
func (m *MsgSetDailyRewardPercent) String() string { return proto.CompactTextString(m) }
func (*MsgSetDailyRewardPercent) ProtoMessage()    {}
func (*MsgSetDailyRewardPercent) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{14}
}
func (m *MsgSetDailyRewardPercent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDailyRewardPercent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDailyRewardPercent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDailyRewardPercent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDailyRewardPercent.Merge(m, src)
}
func (m *MsgSetDailyRewardPercent) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDailyRewardPercent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDailyRewardPercent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDailyRewardPercent proto.InternalMessageInfo

func (m *MsgSetDailyRewardPercent) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *MsgSetDailyRewardPercent) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *MsgSetDailyRewardPercent) GetDate() time.Time {
	if m != nil {
		return m.Date
	}
	return time.Time{}
}

type MsgSetDailyRewardPercentResponse struct {
}

func (m *MsgSetDailyRewardPercentResponse) Reset()         { *m = MsgSetDailyRewardPercentResponse{} }
func (m *MsgSetDailyRewardPercentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetDailyRewardPercentResponse) ProtoMessage()    {}
func (*MsgSetDailyRewardPercentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{15}
}
func (m *MsgSetDailyRewardPercentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDailyRewardPercentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDailyRewardPercentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDailyRewardPercentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDailyRewardPercentResponse.Merge(m, src)
}
func (m *MsgSetDailyRewardPercentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDailyRewardPercentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDailyRewardPercentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDailyRewardPercentResponse proto.InternalMessageInfo

type MsgBeginWithdrawAll struct {
	FromAddress github_com_UnUniFi_chain_types.StringAccAddress `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3,customtype=github.com/UnUniFi/chain/types.StringAccAddress" json:"from_address"`
}

func (m *MsgBeginWithdrawAll) Reset()         { *m = MsgBeginWithdrawAll{} }
func (m *MsgBeginWithdrawAll) String() string { return proto.CompactTextString(m) }
func (*MsgBeginWithdrawAll) ProtoMessage()    {}
func (*MsgBeginWithdrawAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{16}
}
func (m *MsgBeginWithdrawAll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBeginWithdrawAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBeginWithdrawAll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBeginWithdrawAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBeginWithdrawAll.Merge(m, src)
}
func (m *MsgBeginWithdrawAll) XXX_Size() int {
	return m.Size()
}
func (m *MsgBeginWithdrawAll) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBeginWithdrawAll.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBeginWithdrawAll proto.InternalMessageInfo

type MsgBeginWithdrawAllResponse struct {
}

func (m *MsgBeginWithdrawAllResponse) Reset()         { *m = MsgBeginWithdrawAllResponse{} }
func (m *MsgBeginWithdrawAllResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBeginWithdrawAllResponse) ProtoMessage()    {}
func (*MsgBeginWithdrawAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_954044072c4aa803, []int{17}
}
func (m *MsgBeginWithdrawAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBeginWithdrawAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBeginWithdrawAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBeginWithdrawAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBeginWithdrawAllResponse.Merge(m, src)
}
func (m *MsgBeginWithdrawAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBeginWithdrawAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBeginWithdrawAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBeginWithdrawAllResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgDeposit)(nil), "ununifi.chain.yieldaggregator.MsgDeposit")
	proto.RegisterType((*MsgDepositResponse)(nil), "ununifi.chain.yieldaggregator.MsgDepositResponse")
	proto.RegisterType((*MsgWithdraw)(nil), "ununifi.chain.yieldaggregator.MsgWithdraw")
	proto.RegisterType((*MsgWithdrawResponse)(nil), "ununifi.chain.yieldaggregator.MsgWithdrawResponse")
	proto.RegisterType((*MsgAddFarmingOrder)(nil), "ununifi.chain.yieldaggregator.MsgAddFarmingOrder")
	proto.RegisterType((*MsgAddFarmingOrderResponse)(nil), "ununifi.chain.yieldaggregator.MsgAddFarmingOrderResponse")
	proto.RegisterType((*MsgDeleteFarmingOrder)(nil), "ununifi.chain.yieldaggregator.MsgDeleteFarmingOrder")
	proto.RegisterType((*MsgDeleteFarmingOrderResponse)(nil), "ununifi.chain.yieldaggregator.MsgDeleteFarmingOrderResponse")
	proto.RegisterType((*MsgActivateFarmingOrder)(nil), "ununifi.chain.yieldaggregator.MsgActivateFarmingOrder")
	proto.RegisterType((*MsgActivateFarmingOrderResponse)(nil), "ununifi.chain.yieldaggregator.MsgActivateFarmingOrderResponse")
	proto.RegisterType((*MsgInactivateFarmingOrder)(nil), "ununifi.chain.yieldaggregator.MsgInactivateFarmingOrder")
	proto.RegisterType((*MsgInactivateFarmingOrderResponse)(nil), "ununifi.chain.yieldaggregator.MsgInactivateFarmingOrderResponse")
	proto.RegisterType((*MsgExecuteFarmingOrders)(nil), "ununifi.chain.yieldaggregator.MsgExecuteFarmingOrders")
	proto.RegisterType((*MsgExecuteFarmingOrdersResponse)(nil), "ununifi.chain.yieldaggregator.MsgExecuteFarmingOrdersResponse")
	proto.RegisterType((*MsgSetDailyRewardPercent)(nil), "ununifi.chain.yieldaggregator.MsgSetDailyRewardPercent")
	proto.RegisterType((*MsgSetDailyRewardPercentResponse)(nil), "ununifi.chain.yieldaggregator.MsgSetDailyRewardPercentResponse")
	proto.RegisterType((*MsgBeginWithdrawAll)(nil), "ununifi.chain.yieldaggregator.MsgBeginWithdrawAll")
	proto.RegisterType((*MsgBeginWithdrawAllResponse)(nil), "ununifi.chain.yieldaggregator.MsgBeginWithdrawAllResponse")
}

func init() { proto.RegisterFile("yieldaggregatorv1/tx.proto", fileDescriptor_954044072c4aa803) }

var fileDescriptor_954044072c4aa803 = []byte{
	// 855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0x4d, 0x6f, 0xe3, 0x44,
	0x18, 0xc7, 0x33, 0x4d, 0x76, 0x37, 0x79, 0xc2, 0x9b, 0x4c, 0x0b, 0xa9, 0x97, 0xbc, 0xac, 0x11,
	0x28, 0x80, 0xb0, 0x95, 0x80, 0xe8, 0x82, 0x10, 0x90, 0x50, 0x56, 0x8a, 0x44, 0x04, 0xf2, 0xb2,
	0x42, 0xda, 0x4b, 0x35, 0xb1, 0xa7, 0xd3, 0x81, 0xc4, 0x13, 0x3c, 0x93, 0x6e, 0x7b, 0x42, 0xe2,
	0xc4, 0x69, 0x55, 0x10, 0x9f, 0x80, 0x4f, 0x80, 0xc4, 0x85, 0x8f, 0xd0, 0x63, 0x8f, 0x88, 0x43,
	0x41, 0xed, 0x17, 0x41, 0x1e, 0xbf, 0x34, 0xa4, 0x4e, 0xe3, 0x46, 0x0a, 0xea, 0xa9, 0xf5, 0xcc,
	0xf3, 0x9f, 0xf9, 0xfd, 0x1f, 0xd7, 0xcf, 0x5f, 0x05, 0xfd, 0x90, 0x91, 0xa1, 0x8b, 0x29, 0xf5,
	0x09, 0xc5, 0x92, 0xfb, 0xfb, 0x2d, 0x4b, 0x1e, 0x98, 0x63, 0x9f, 0x4b, 0xae, 0x55, 0x27, 0xde,
	0xc4, 0x63, 0xbb, 0xcc, 0x74, 0xf6, 0x30, 0xf3, 0xcc, 0x99, 0x4a, 0x7d, 0x9d, 0x72, 0xca, 0x55,
	0xa5, 0x15, 0xfc, 0x16, 0x8a, 0xf4, 0x9a, 0xc3, 0xc5, 0x88, 0x0b, 0x6b, 0x80, 0x05, 0xb1, 0xf6,
	0x5b, 0x03, 0x22, 0x71, 0xcb, 0x72, 0x38, 0xf3, 0xa2, 0xfd, 0xea, 0xe5, 0x0b, 0xb1, 0x10, 0x44,
	0x46, 0xdb, 0x75, 0xca, 0x39, 0x1d, 0x12, 0x4b, 0x3d, 0x0d, 0x26, 0xbb, 0x96, 0x64, 0x23, 0x22,
	0x24, 0x1e, 0x8d, 0xc3, 0x02, 0xe3, 0x18, 0x01, 0xf4, 0x05, 0xdd, 0x26, 0x63, 0x2e, 0x98, 0xd4,
	0x1e, 0xc3, 0x33, 0xbb, 0x3e, 0x1f, 0xed, 0x60, 0xd7, 0xf5, 0x89, 0x10, 0x15, 0xd4, 0x40, 0xcd,
	0x52, 0x77, 0xeb, 0xf8, 0xb4, 0x9e, 0xfb, 0xeb, 0xb4, 0x6e, 0x51, 0x26, 0xf7, 0x26, 0x03, 0xd3,
	0xe1, 0x23, 0xeb, 0x91, 0xf7, 0xc8, 0x63, 0x0f, 0x98, 0xa5, 0xcc, 0x58, 0xf2, 0x70, 0x4c, 0x84,
	0xf9, 0x50, 0xfa, 0xcc, 0xa3, 0x1d, 0xc7, 0xe9, 0x84, 0x72, 0xbb, 0x1c, 0x1c, 0x16, 0x3d, 0x68,
	0x5b, 0x70, 0x1b, 0x8f, 0xf8, 0xc4, 0x93, 0x95, 0xb5, 0x46, 0xbe, 0x59, 0x6e, 0x6f, 0x9a, 0xa1,
	0x37, 0x33, 0xf0, 0x66, 0x46, 0xde, 0xcc, 0x4f, 0x39, 0xf3, 0xba, 0x85, 0xe0, 0x42, 0x3b, 0x2a,
	0xd7, 0x5e, 0x83, 0xe7, 0xc8, 0x01, 0x71, 0x26, 0x92, 0xec, 0x70, 0xdf, 0x25, 0xbe, 0xa8, 0xe4,
	0x1b, 0xa8, 0x59, 0xb4, 0x9f, 0x8d, 0x56, 0xbf, 0x50, 0x8b, 0xc6, 0x3a, 0x68, 0x17, 0x4e, 0x6c,
	0x22, 0xc6, 0xdc, 0x13, 0xc4, 0xf8, 0x15, 0x41, 0xb9, 0x2f, 0xe8, 0xd7, 0x4c, 0xee, 0xb9, 0x3e,
	0x7e, 0x72, 0x23, 0x1d, 0x1a, 0x1b, 0xf0, 0xe2, 0x14, 0x63, 0xc2, 0xfe, 0x3b, 0x52, 0x96, 0x3a,
	0xae, 0xfb, 0x00, 0xfb, 0x23, 0xe6, 0x51, 0xe5, 0x74, 0xa5, 0x16, 0x3a, 0x70, 0x4b, 0xf5, 0xb8,
	0xb2, 0xd6, 0x40, 0xcd, 0x72, 0xfb, 0x2d, 0xf3, 0xca, 0x3f, 0x5a, 0x73, 0x9a, 0xcb, 0x0e, 0x95,
	0xc6, 0x2b, 0xa0, 0x5f, 0x86, 0x4e, 0x3c, 0x3d, 0x45, 0xb0, 0xa1, 0x5e, 0xd3, 0x90, 0x48, 0xf2,
	0xbf, 0xd9, 0xda, 0x84, 0xa2, 0x82, 0xdb, 0x61, 0xae, 0x72, 0x56, 0xb2, 0xef, 0xa8, 0xe7, 0x9e,
	0x6b, 0xd4, 0xa1, 0x9a, 0xca, 0x93, 0x10, 0x1f, 0x21, 0x78, 0x39, 0x30, 0xe4, 0x48, 0xb6, 0x8f,
	0x6f, 0x06, 0xf3, 0x3d, 0xa8, 0xcf, 0x21, 0x4a, 0xa8, 0x7f, 0x46, 0xb0, 0xd9, 0x17, 0xb4, 0xe7,
	0xe1, 0x1b, 0xc4, 0xfd, 0x2a, 0xdc, 0x9b, 0xcb, 0x34, 0x4d, 0x1e, 0xf4, 0xfb, 0xb3, 0xf0, 0xe3,
	0x9e, 0x2e, 0x11, 0x2b, 0xe5, 0xbe, 0x0b, 0xa5, 0x98, 0x5b, 0xa8, 0x0f, 0xb8, 0x64, 0x17, 0x23,
	0x70, 0x11, 0x75, 0x3c, 0x8d, 0x29, 0xe1, 0xfe, 0x6d, 0x0d, 0x2a, 0x7d, 0x41, 0x1f, 0x12, 0xb9,
	0x8d, 0xd9, 0xf0, 0xd0, 0x26, 0x4f, 0xb0, 0xef, 0x7e, 0x49, 0x7c, 0x87, 0x78, 0xab, 0x1d, 0xac,
	0x55, 0x00, 0xec, 0x38, 0xc1, 0x20, 0xb9, 0x68, 0x79, 0x29, 0x5a, 0xe9, 0xb9, 0x81, 0x2f, 0x89,
	0x7d, 0x4a, 0xd4, 0x6e, 0x5e, 0xed, 0x16, 0xc3, 0x85, 0x9e, 0xab, 0x75, 0xa1, 0xe0, 0x63, 0x49,
	0x2a, 0x05, 0xc5, 0x63, 0x46, 0x3c, 0xaf, 0x4f, 0xf1, 0x44, 0x01, 0x14, 0xfe, 0x78, 0x5b, 0xb8,
	0xdf, 0x46, 0x4c, 0xdb, 0xc4, 0xb1, 0x95, 0x56, 0xbb, 0x0f, 0x05, 0x37, 0x38, 0xe3, 0x96, 0x1a,
	0x19, 0xba, 0x19, 0x66, 0x8e, 0x19, 0x67, 0x8e, 0xf9, 0x55, 0x9c, 0x39, 0xdd, 0x62, 0x70, 0xfe,
	0xd1, 0xdf, 0x75, 0x64, 0x2b, 0x85, 0x61, 0x40, 0x63, 0x5e, 0xc7, 0x92, 0xb6, 0x7e, 0xa7, 0x66,
	0x63, 0x97, 0x50, 0xe6, 0xc5, 0x03, 0xb2, 0x33, 0x1c, 0xae, 0xb2, 0xa1, 0x46, 0x15, 0xee, 0xa6,
	0x5c, 0x19, 0x13, 0xb5, 0xff, 0x28, 0x41, 0xbe, 0x2f, 0xa8, 0x46, 0xe1, 0x4e, 0x9c, 0x9b, 0x6f,
	0x2c, 0x98, 0x93, 0x17, 0xc1, 0xa4, 0xb7, 0x32, 0x97, 0xc6, 0x17, 0x6a, 0xdf, 0x40, 0x31, 0xc9,
	0xaf, 0x37, 0x17, 0xcb, 0xe3, 0x5a, 0xbd, 0x9d, 0xbd, 0x36, 0xb9, 0xeb, 0x07, 0x04, 0x2f, 0x5c,
	0x6a, 0x76, 0x86, 0x83, 0x66, 0x35, 0xfa, 0x07, 0xd7, 0xd7, 0x24, 0x10, 0xdf, 0xc3, 0xf3, 0xb3,
	0xa1, 0x97, 0xa1, 0x6d, 0x33, 0x12, 0xfd, 0xfd, 0x6b, 0x4b, 0x12, 0x80, 0x1f, 0x11, 0x68, 0x29,
	0x11, 0xf5, 0x6e, 0x96, 0x77, 0x37, 0xab, 0xd2, 0x3f, 0x5c, 0x46, 0x95, 0xa0, 0x3c, 0x45, 0xb0,
	0x9e, 0x9a, 0x3d, 0xef, 0x65, 0xb0, 0x97, 0xa2, 0xd3, 0x3f, 0x5a, 0x4e, 0x97, 0x00, 0xfd, 0x82,
	0xe0, 0xa5, 0x39, 0xb1, 0x72, 0x7f, 0xf1, 0xd1, 0xe9, 0x4a, 0xfd, 0x93, 0x65, 0x95, 0xff, 0xe9,
	0x53, 0x6a, 0x66, 0x64, 0xe8, 0x53, 0x9a, 0x2e, 0x4b, 0x9f, 0xae, 0xca, 0x03, 0xed, 0x27, 0x04,
	0x1b, 0xe9, 0x61, 0xb0, 0xb5, 0xf8, 0xe4, 0x54, 0xa1, 0xfe, 0xf1, 0x92, 0xc2, 0x98, 0xa9, 0xfb,
	0xf9, 0xf1, 0x59, 0x0d, 0x9d, 0x9c, 0xd5, 0xd0, 0x3f, 0x67, 0x35, 0x74, 0x74, 0x5e, 0xcb, 0x9d,
	0x9c, 0xd7, 0x72, 0x7f, 0x9e, 0xd7, 0x72, 0x8f, 0xdb, 0x73, 0x27, 0xe6, 0x81, 0x95, 0xf2, 0x4f,
	0x4d, 0x30, 0x45, 0x07, 0xb7, 0xd5, 0x88, 0x7f, 0xe7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0x0d, 0x26, 0x3e, 0xf6, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Deposit(ctx context.Context, in *MsgDeposit, opts ...grpc.CallOption) (*MsgDepositResponse, error)
	Withdraw(ctx context.Context, in *MsgWithdraw, opts ...grpc.CallOption) (*MsgWithdrawResponse, error)
	BeginWithdrawAll(ctx context.Context, in *MsgBeginWithdrawAll, opts ...grpc.CallOption) (*MsgBeginWithdrawAllResponse, error)
	AddFarmingOrder(ctx context.Context, in *MsgAddFarmingOrder, opts ...grpc.CallOption) (*MsgAddFarmingOrderResponse, error)
	DeleteFarmingOrder(ctx context.Context, in *MsgDeleteFarmingOrder, opts ...grpc.CallOption) (*MsgDeleteFarmingOrderResponse, error)
	ActivateFarmingOrder(ctx context.Context, in *MsgActivateFarmingOrder, opts ...grpc.CallOption) (*MsgActivateFarmingOrderResponse, error)
	InactivateFarmingOrder(ctx context.Context, in *MsgInactivateFarmingOrder, opts ...grpc.CallOption) (*MsgInactivateFarmingOrderResponse, error)
	ExecuteFarmingOrders(ctx context.Context, in *MsgExecuteFarmingOrders, opts ...grpc.CallOption) (*MsgExecuteFarmingOrdersResponse, error)
	SetDailyRewardPercent(ctx context.Context, in *MsgSetDailyRewardPercent, opts ...grpc.CallOption) (*MsgSetDailyRewardPercentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Deposit(ctx context.Context, in *MsgDeposit, opts ...grpc.CallOption) (*MsgDepositResponse, error) {
	out := new(MsgDepositResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/Deposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Withdraw(ctx context.Context, in *MsgWithdraw, opts ...grpc.CallOption) (*MsgWithdrawResponse, error) {
	out := new(MsgWithdrawResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BeginWithdrawAll(ctx context.Context, in *MsgBeginWithdrawAll, opts ...grpc.CallOption) (*MsgBeginWithdrawAllResponse, error) {
	out := new(MsgBeginWithdrawAllResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/BeginWithdrawAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddFarmingOrder(ctx context.Context, in *MsgAddFarmingOrder, opts ...grpc.CallOption) (*MsgAddFarmingOrderResponse, error) {
	out := new(MsgAddFarmingOrderResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/AddFarmingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteFarmingOrder(ctx context.Context, in *MsgDeleteFarmingOrder, opts ...grpc.CallOption) (*MsgDeleteFarmingOrderResponse, error) {
	out := new(MsgDeleteFarmingOrderResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/DeleteFarmingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ActivateFarmingOrder(ctx context.Context, in *MsgActivateFarmingOrder, opts ...grpc.CallOption) (*MsgActivateFarmingOrderResponse, error) {
	out := new(MsgActivateFarmingOrderResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/ActivateFarmingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InactivateFarmingOrder(ctx context.Context, in *MsgInactivateFarmingOrder, opts ...grpc.CallOption) (*MsgInactivateFarmingOrderResponse, error) {
	out := new(MsgInactivateFarmingOrderResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/InactivateFarmingOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExecuteFarmingOrders(ctx context.Context, in *MsgExecuteFarmingOrders, opts ...grpc.CallOption) (*MsgExecuteFarmingOrdersResponse, error) {
	out := new(MsgExecuteFarmingOrdersResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/ExecuteFarmingOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetDailyRewardPercent(ctx context.Context, in *MsgSetDailyRewardPercent, opts ...grpc.CallOption) (*MsgSetDailyRewardPercentResponse, error) {
	out := new(MsgSetDailyRewardPercentResponse)
	err := c.cc.Invoke(ctx, "/ununifi.chain.yieldaggregator.Msg/SetDailyRewardPercent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Deposit(context.Context, *MsgDeposit) (*MsgDepositResponse, error)
	Withdraw(context.Context, *MsgWithdraw) (*MsgWithdrawResponse, error)
	BeginWithdrawAll(context.Context, *MsgBeginWithdrawAll) (*MsgBeginWithdrawAllResponse, error)
	AddFarmingOrder(context.Context, *MsgAddFarmingOrder) (*MsgAddFarmingOrderResponse, error)
	DeleteFarmingOrder(context.Context, *MsgDeleteFarmingOrder) (*MsgDeleteFarmingOrderResponse, error)
	ActivateFarmingOrder(context.Context, *MsgActivateFarmingOrder) (*MsgActivateFarmingOrderResponse, error)
	InactivateFarmingOrder(context.Context, *MsgInactivateFarmingOrder) (*MsgInactivateFarmingOrderResponse, error)
	ExecuteFarmingOrders(context.Context, *MsgExecuteFarmingOrders) (*MsgExecuteFarmingOrdersResponse, error)
	SetDailyRewardPercent(context.Context, *MsgSetDailyRewardPercent) (*MsgSetDailyRewardPercentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Deposit(ctx context.Context, req *MsgDeposit) (*MsgDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deposit not implemented")
}
func (*UnimplementedMsgServer) Withdraw(ctx context.Context, req *MsgWithdraw) (*MsgWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}
func (*UnimplementedMsgServer) BeginWithdrawAll(ctx context.Context, req *MsgBeginWithdrawAll) (*MsgBeginWithdrawAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginWithdrawAll not implemented")
}
func (*UnimplementedMsgServer) AddFarmingOrder(ctx context.Context, req *MsgAddFarmingOrder) (*MsgAddFarmingOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFarmingOrder not implemented")
}
func (*UnimplementedMsgServer) DeleteFarmingOrder(ctx context.Context, req *MsgDeleteFarmingOrder) (*MsgDeleteFarmingOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFarmingOrder not implemented")
}
func (*UnimplementedMsgServer) ActivateFarmingOrder(ctx context.Context, req *MsgActivateFarmingOrder) (*MsgActivateFarmingOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateFarmingOrder not implemented")
}
func (*UnimplementedMsgServer) InactivateFarmingOrder(ctx context.Context, req *MsgInactivateFarmingOrder) (*MsgInactivateFarmingOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InactivateFarmingOrder not implemented")
}
func (*UnimplementedMsgServer) ExecuteFarmingOrders(ctx context.Context, req *MsgExecuteFarmingOrders) (*MsgExecuteFarmingOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteFarmingOrders not implemented")
}
func (*UnimplementedMsgServer) SetDailyRewardPercent(ctx context.Context, req *MsgSetDailyRewardPercent) (*MsgSetDailyRewardPercentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDailyRewardPercent not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Deposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Deposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/Deposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Deposit(ctx, req.(*MsgDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Withdraw(ctx, req.(*MsgWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BeginWithdrawAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBeginWithdrawAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BeginWithdrawAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/BeginWithdrawAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BeginWithdrawAll(ctx, req.(*MsgBeginWithdrawAll))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddFarmingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddFarmingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddFarmingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/AddFarmingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddFarmingOrder(ctx, req.(*MsgAddFarmingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteFarmingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteFarmingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteFarmingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/DeleteFarmingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteFarmingOrder(ctx, req.(*MsgDeleteFarmingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ActivateFarmingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgActivateFarmingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ActivateFarmingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/ActivateFarmingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ActivateFarmingOrder(ctx, req.(*MsgActivateFarmingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InactivateFarmingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInactivateFarmingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InactivateFarmingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/InactivateFarmingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InactivateFarmingOrder(ctx, req.(*MsgInactivateFarmingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExecuteFarmingOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExecuteFarmingOrders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExecuteFarmingOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/ExecuteFarmingOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExecuteFarmingOrders(ctx, req.(*MsgExecuteFarmingOrders))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetDailyRewardPercent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetDailyRewardPercent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetDailyRewardPercent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ununifi.chain.yieldaggregator.Msg/SetDailyRewardPercent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetDailyRewardPercent(ctx, req.(*MsgSetDailyRewardPercent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ununifi.chain.yieldaggregator.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deposit",
			Handler:    _Msg_Deposit_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Msg_Withdraw_Handler,
		},
		{
			MethodName: "BeginWithdrawAll",
			Handler:    _Msg_BeginWithdrawAll_Handler,
		},
		{
			MethodName: "AddFarmingOrder",
			Handler:    _Msg_AddFarmingOrder_Handler,
		},
		{
			MethodName: "DeleteFarmingOrder",
			Handler:    _Msg_DeleteFarmingOrder_Handler,
		},
		{
			MethodName: "ActivateFarmingOrder",
			Handler:    _Msg_ActivateFarmingOrder_Handler,
		},
		{
			MethodName: "InactivateFarmingOrder",
			Handler:    _Msg_InactivateFarmingOrder_Handler,
		},
		{
			MethodName: "ExecuteFarmingOrders",
			Handler:    _Msg_ExecuteFarmingOrders_Handler,
		},
		{
			MethodName: "SetDailyRewardPercent",
			Handler:    _Msg_SetDailyRewardPercent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yieldaggregatorv1/tx.proto",
}

func (m *MsgDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExecuteOrders {
		i--
		if m.ExecuteOrders {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddFarmingOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddFarmingOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddFarmingOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Order != nil {
		{
			size, err := m.Order.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgAddFarmingOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddFarmingOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddFarmingOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteFarmingOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteFarmingOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteFarmingOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgDeleteFarmingOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteFarmingOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteFarmingOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgActivateFarmingOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateFarmingOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateFarmingOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgActivateFarmingOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateFarmingOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateFarmingOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInactivateFarmingOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInactivateFarmingOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInactivateFarmingOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OrderId) > 0 {
		i -= len(m.OrderId)
		copy(dAtA[i:], m.OrderId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgInactivateFarmingOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInactivateFarmingOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInactivateFarmingOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgExecuteFarmingOrders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteFarmingOrders) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteFarmingOrders) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OrderIds) > 0 {
		for iNdEx := len(m.OrderIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OrderIds[iNdEx])
			copy(dAtA[i:], m.OrderIds[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.OrderIds[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgExecuteFarmingOrdersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteFarmingOrdersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteFarmingOrdersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetDailyRewardPercent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDailyRewardPercent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDailyRewardPercent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Date, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Date):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintTx(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x2a
	{
		size := m.Rate.Size()
		i -= size
		if _, err := m.Rate.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.TargetId) > 0 {
		i -= len(m.TargetId)
		copy(dAtA[i:], m.TargetId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TargetId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgSetDailyRewardPercentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDailyRewardPercentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDailyRewardPercentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBeginWithdrawAll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBeginWithdrawAll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBeginWithdrawAll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.FromAddress.Size()
		i -= size
		if _, err := m.FromAddress.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgBeginWithdrawAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBeginWithdrawAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBeginWithdrawAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.ExecuteOrders {
		n += 2
	}
	return n
}

func (m *MsgDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddFarmingOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Order != nil {
		l = m.Order.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddFarmingOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteFarmingOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteFarmingOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgActivateFarmingOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgActivateFarmingOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInactivateFarmingOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OrderId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInactivateFarmingOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgExecuteFarmingOrders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.OrderIds) > 0 {
		for _, s := range m.OrderIds {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgExecuteFarmingOrdersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetDailyRewardPercent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TargetId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Rate.Size()
	n += 1 + l + sovTx(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Date)
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetDailyRewardPercentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBeginWithdrawAll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.FromAddress.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgBeginWithdrawAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecuteOrders", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExecuteOrders = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddFarmingOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddFarmingOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddFarmingOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Order == nil {
				m.Order = &FarmingOrder{}
			}
			if err := m.Order.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddFarmingOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddFarmingOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddFarmingOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteFarmingOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteFarmingOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteFarmingOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteFarmingOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteFarmingOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteFarmingOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateFarmingOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateFarmingOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateFarmingOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateFarmingOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateFarmingOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateFarmingOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInactivateFarmingOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInactivateFarmingOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInactivateFarmingOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInactivateFarmingOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInactivateFarmingOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInactivateFarmingOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteFarmingOrders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteFarmingOrders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteFarmingOrders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderIds = append(m.OrderIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteFarmingOrdersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteFarmingOrdersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteFarmingOrdersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDailyRewardPercent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDailyRewardPercent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDailyRewardPercent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Rate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Date, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDailyRewardPercentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDailyRewardPercentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDailyRewardPercentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBeginWithdrawAll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBeginWithdrawAll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBeginWithdrawAll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBeginWithdrawAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBeginWithdrawAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBeginWithdrawAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
