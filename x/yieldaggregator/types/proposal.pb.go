// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yieldaggregator/proposal.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// proposal to add new yield farm.
type ProposalAddYieldFarm struct {
	Account *AssetManagementAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *ProposalAddYieldFarm) Reset()         { *m = ProposalAddYieldFarm{} }
func (m *ProposalAddYieldFarm) String() string { return proto.CompactTextString(m) }
func (*ProposalAddYieldFarm) ProtoMessage()    {}
func (*ProposalAddYieldFarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{0}
}
func (m *ProposalAddYieldFarm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalAddYieldFarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalAddYieldFarm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalAddYieldFarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalAddYieldFarm.Merge(m, src)
}
func (m *ProposalAddYieldFarm) XXX_Size() int {
	return m.Size()
}
func (m *ProposalAddYieldFarm) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalAddYieldFarm.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalAddYieldFarm proto.InternalMessageInfo

func (m *ProposalAddYieldFarm) GetAccount() *AssetManagementAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

// proposal to update yield farm info
type ProposalUpdateYieldFarm struct {
	Account *AssetManagementAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *ProposalUpdateYieldFarm) Reset()         { *m = ProposalUpdateYieldFarm{} }
func (m *ProposalUpdateYieldFarm) String() string { return proto.CompactTextString(m) }
func (*ProposalUpdateYieldFarm) ProtoMessage()    {}
func (*ProposalUpdateYieldFarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{1}
}
func (m *ProposalUpdateYieldFarm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalUpdateYieldFarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalUpdateYieldFarm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalUpdateYieldFarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalUpdateYieldFarm.Merge(m, src)
}
func (m *ProposalUpdateYieldFarm) XXX_Size() int {
	return m.Size()
}
func (m *ProposalUpdateYieldFarm) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalUpdateYieldFarm.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalUpdateYieldFarm proto.InternalMessageInfo

func (m *ProposalUpdateYieldFarm) GetAccount() *AssetManagementAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

// proposal to remove yield farm
type ProposalStopYieldFarm struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ProposalStopYieldFarm) Reset()         { *m = ProposalStopYieldFarm{} }
func (m *ProposalStopYieldFarm) String() string { return proto.CompactTextString(m) }
func (*ProposalStopYieldFarm) ProtoMessage()    {}
func (*ProposalStopYieldFarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{2}
}
func (m *ProposalStopYieldFarm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalStopYieldFarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalStopYieldFarm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalStopYieldFarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalStopYieldFarm.Merge(m, src)
}
func (m *ProposalStopYieldFarm) XXX_Size() int {
	return m.Size()
}
func (m *ProposalStopYieldFarm) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalStopYieldFarm.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalStopYieldFarm proto.InternalMessageInfo

func (m *ProposalStopYieldFarm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// proposal to remove yield farm
type ProposalRemoveYieldFarm struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ProposalRemoveYieldFarm) Reset()         { *m = ProposalRemoveYieldFarm{} }
func (m *ProposalRemoveYieldFarm) String() string { return proto.CompactTextString(m) }
func (*ProposalRemoveYieldFarm) ProtoMessage()    {}
func (*ProposalRemoveYieldFarm) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{3}
}
func (m *ProposalRemoveYieldFarm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalRemoveYieldFarm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalRemoveYieldFarm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalRemoveYieldFarm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalRemoveYieldFarm.Merge(m, src)
}
func (m *ProposalRemoveYieldFarm) XXX_Size() int {
	return m.Size()
}
func (m *ProposalRemoveYieldFarm) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalRemoveYieldFarm.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalRemoveYieldFarm proto.InternalMessageInfo

func (m *ProposalRemoveYieldFarm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// proposal to add new yield farm target
type ProposalAddYieldFarmTarget struct {
	Target *AssetManagementTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (m *ProposalAddYieldFarmTarget) Reset()         { *m = ProposalAddYieldFarmTarget{} }
func (m *ProposalAddYieldFarmTarget) String() string { return proto.CompactTextString(m) }
func (*ProposalAddYieldFarmTarget) ProtoMessage()    {}
func (*ProposalAddYieldFarmTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{4}
}
func (m *ProposalAddYieldFarmTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalAddYieldFarmTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalAddYieldFarmTarget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalAddYieldFarmTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalAddYieldFarmTarget.Merge(m, src)
}
func (m *ProposalAddYieldFarmTarget) XXX_Size() int {
	return m.Size()
}
func (m *ProposalAddYieldFarmTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalAddYieldFarmTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalAddYieldFarmTarget proto.InternalMessageInfo

func (m *ProposalAddYieldFarmTarget) GetTarget() *AssetManagementTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

// proposal to update yield farm target
type ProposalUpdateYieldFarmTarget struct {
	Target *AssetManagementTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (m *ProposalUpdateYieldFarmTarget) Reset()         { *m = ProposalUpdateYieldFarmTarget{} }
func (m *ProposalUpdateYieldFarmTarget) String() string { return proto.CompactTextString(m) }
func (*ProposalUpdateYieldFarmTarget) ProtoMessage()    {}
func (*ProposalUpdateYieldFarmTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{5}
}
func (m *ProposalUpdateYieldFarmTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalUpdateYieldFarmTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalUpdateYieldFarmTarget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalUpdateYieldFarmTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalUpdateYieldFarmTarget.Merge(m, src)
}
func (m *ProposalUpdateYieldFarmTarget) XXX_Size() int {
	return m.Size()
}
func (m *ProposalUpdateYieldFarmTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalUpdateYieldFarmTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalUpdateYieldFarmTarget proto.InternalMessageInfo

func (m *ProposalUpdateYieldFarmTarget) GetTarget() *AssetManagementTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

// proposal to stop yield farm target
type ProposalStopYieldFarmTarget struct {
	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetManagementAccountId string `protobuf:"bytes,2,opt,name=asset_management_account_id,json=assetManagementAccountId,proto3" json:"asset_management_account_id,omitempty"`
}

func (m *ProposalStopYieldFarmTarget) Reset()         { *m = ProposalStopYieldFarmTarget{} }
func (m *ProposalStopYieldFarmTarget) String() string { return proto.CompactTextString(m) }
func (*ProposalStopYieldFarmTarget) ProtoMessage()    {}
func (*ProposalStopYieldFarmTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{6}
}
func (m *ProposalStopYieldFarmTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalStopYieldFarmTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalStopYieldFarmTarget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalStopYieldFarmTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalStopYieldFarmTarget.Merge(m, src)
}
func (m *ProposalStopYieldFarmTarget) XXX_Size() int {
	return m.Size()
}
func (m *ProposalStopYieldFarmTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalStopYieldFarmTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalStopYieldFarmTarget proto.InternalMessageInfo

func (m *ProposalStopYieldFarmTarget) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProposalStopYieldFarmTarget) GetAssetManagementAccountId() string {
	if m != nil {
		return m.AssetManagementAccountId
	}
	return ""
}

// proposal to delete yield farm target
type ProposalRemoveYieldFarmTarget struct {
	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetManagementAccountId string `protobuf:"bytes,2,opt,name=asset_management_account_id,json=assetManagementAccountId,proto3" json:"asset_management_account_id,omitempty"`
}

func (m *ProposalRemoveYieldFarmTarget) Reset()         { *m = ProposalRemoveYieldFarmTarget{} }
func (m *ProposalRemoveYieldFarmTarget) String() string { return proto.CompactTextString(m) }
func (*ProposalRemoveYieldFarmTarget) ProtoMessage()    {}
func (*ProposalRemoveYieldFarmTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_b653a3bacf13d3df, []int{7}
}
func (m *ProposalRemoveYieldFarmTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProposalRemoveYieldFarmTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProposalRemoveYieldFarmTarget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProposalRemoveYieldFarmTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalRemoveYieldFarmTarget.Merge(m, src)
}
func (m *ProposalRemoveYieldFarmTarget) XXX_Size() int {
	return m.Size()
}
func (m *ProposalRemoveYieldFarmTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalRemoveYieldFarmTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalRemoveYieldFarmTarget proto.InternalMessageInfo

func (m *ProposalRemoveYieldFarmTarget) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProposalRemoveYieldFarmTarget) GetAssetManagementAccountId() string {
	if m != nil {
		return m.AssetManagementAccountId
	}
	return ""
}

func init() {
	proto.RegisterType((*ProposalAddYieldFarm)(nil), "ununifi.chain.yieldaggregator.ProposalAddYieldFarm")
	proto.RegisterType((*ProposalUpdateYieldFarm)(nil), "ununifi.chain.yieldaggregator.ProposalUpdateYieldFarm")
	proto.RegisterType((*ProposalStopYieldFarm)(nil), "ununifi.chain.yieldaggregator.ProposalStopYieldFarm")
	proto.RegisterType((*ProposalRemoveYieldFarm)(nil), "ununifi.chain.yieldaggregator.ProposalRemoveYieldFarm")
	proto.RegisterType((*ProposalAddYieldFarmTarget)(nil), "ununifi.chain.yieldaggregator.ProposalAddYieldFarmTarget")
	proto.RegisterType((*ProposalUpdateYieldFarmTarget)(nil), "ununifi.chain.yieldaggregator.ProposalUpdateYieldFarmTarget")
	proto.RegisterType((*ProposalStopYieldFarmTarget)(nil), "ununifi.chain.yieldaggregator.ProposalStopYieldFarmTarget")
	proto.RegisterType((*ProposalRemoveYieldFarmTarget)(nil), "ununifi.chain.yieldaggregator.ProposalRemoveYieldFarmTarget")
}

func init() { proto.RegisterFile("yieldaggregator/proposal.proto", fileDescriptor_b653a3bacf13d3df) }

var fileDescriptor_b653a3bacf13d3df = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x9b, 0x0e, 0x45, 0x18, 0x89, 0x21, 0x2a, 0xa2, 0x6a, 0xa9, 0x85, 0xb2, 0x00, 0x4b,
	0x82, 0xf8, 0x33, 0x32, 0x94, 0xa1, 0x12, 0x08, 0x04, 0x0a, 0x74, 0x80, 0xa5, 0xba, 0xc6, 0xc6,
	0x75, 0x55, 0xdb, 0x91, 0xe3, 0x20, 0xfa, 0x16, 0x3c, 0x16, 0x63, 0x47, 0x46, 0xd4, 0xbe, 0x08,
	0xaa, 0x93, 0x52, 0x29, 0xb4, 0x48, 0x0c, 0xdd, 0x2c, 0xdd, 0x77, 0xdf, 0xef, 0xee, 0x4b, 0x0e,
	0xe1, 0x11, 0xa7, 0x43, 0x02, 0x8c, 0x69, 0xca, 0xc0, 0x28, 0x1d, 0xc4, 0x5a, 0xc5, 0x2a, 0x81,
	0xa1, 0x1f, 0x6b, 0x65, 0x94, 0xdb, 0x4c, 0x65, 0x2a, 0xf9, 0x0b, 0xf7, 0xa3, 0x3e, 0x70, 0xe9,
	0x17, 0xd4, 0xf5, 0x2a, 0x53, 0x4c, 0x59, 0x65, 0x30, 0x7b, 0x65, 0x4d, 0xf5, 0xbd, 0x5f, 0xa6,
	0xa0, 0x41, 0x24, 0x79, 0xb5, 0x51, 0xac, 0x42, 0x92, 0x50, 0x93, 0x15, 0x3d, 0x86, 0xaa, 0xf7,
	0xf9, 0x04, 0x2d, 0x42, 0x9e, 0x66, 0xca, 0x36, 0x68, 0xe1, 0xde, 0xa1, 0x0d, 0x88, 0x22, 0x95,
	0x4a, 0x53, 0x73, 0xf6, 0x9d, 0xc3, 0xad, 0x93, 0x73, 0xff, 0xcf, 0xc9, 0xfc, 0xd6, 0xcc, 0xf4,
	0x16, 0x24, 0x30, 0x2a, 0xa8, 0x34, 0xad, 0xac, 0x39, 0x9c, 0xbb, 0x78, 0x03, 0xb4, 0x3b, 0x07,
	0x75, 0x62, 0x02, 0x86, 0xae, 0x91, 0x75, 0x80, 0x76, 0xe6, 0xac, 0x07, 0xa3, 0xe2, 0x05, 0x69,
	0x1b, 0x95, 0x39, 0xb1, 0x90, 0xcd, 0xb0, 0xcc, 0x89, 0x77, 0xb4, 0x18, 0x2a, 0xa4, 0x42, 0xbd,
	0xd2, 0xd5, 0xd2, 0x01, 0xaa, 0x2f, 0x0b, 0xea, 0x11, 0x34, 0xa3, 0xc6, 0xbd, 0x41, 0x15, 0x63,
	0x5f, 0xf9, 0x06, 0x67, 0xff, 0xdb, 0x20, 0x73, 0x09, 0x73, 0x0f, 0x4f, 0xa0, 0xe6, 0x8a, 0xac,
	0xd6, 0x82, 0x1b, 0xa2, 0xc6, 0xd2, 0xb8, 0x72, 0x58, 0x21, 0x09, 0xf7, 0x02, 0x35, 0xec, 0x1f,
	0xd4, 0x15, 0x3f, 0x86, 0xdd, 0x3c, 0xf9, 0x2e, 0x27, 0xb5, 0xb2, 0x15, 0xd6, 0x60, 0xe9, 0x37,
	0xba, 0x22, 0x9e, 0x5c, 0x2c, 0x57, 0xc8, 0x7c, 0x2d, 0xbc, 0xcb, 0xeb, 0x8f, 0x09, 0x76, 0xc6,
	0x13, 0xec, 0x7c, 0x4d, 0xb0, 0xf3, 0x3e, 0xc5, 0xa5, 0xf1, 0x14, 0x97, 0x3e, 0xa7, 0xb8, 0xf4,
	0x7c, 0xcc, 0xb8, 0xe9, 0xa7, 0x3d, 0x3f, 0x52, 0x22, 0xe8, 0xc8, 0x8e, 0xe4, 0x6d, 0x1e, 0xd8,
	0xfc, 0x82, 0xb7, 0xa0, 0x78, 0x33, 0x66, 0x14, 0xd3, 0xa4, 0x57, 0xb1, 0x47, 0x73, 0xfa, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0xbc, 0x72, 0xb8, 0x45, 0xc6, 0x03, 0x00, 0x00,
}

func (m *ProposalAddYieldFarm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalAddYieldFarm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalAddYieldFarm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProposal(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalUpdateYieldFarm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalUpdateYieldFarm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalUpdateYieldFarm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProposal(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalStopYieldFarm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalStopYieldFarm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalStopYieldFarm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalRemoveYieldFarm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalRemoveYieldFarm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalRemoveYieldFarm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalAddYieldFarmTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalAddYieldFarmTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalAddYieldFarmTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Target != nil {
		{
			size, err := m.Target.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProposal(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalUpdateYieldFarmTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalUpdateYieldFarmTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalUpdateYieldFarmTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Target != nil {
		{
			size, err := m.Target.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProposal(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalStopYieldFarmTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalStopYieldFarmTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalStopYieldFarmTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AssetManagementAccountId) > 0 {
		i -= len(m.AssetManagementAccountId)
		copy(dAtA[i:], m.AssetManagementAccountId)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.AssetManagementAccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProposalRemoveYieldFarmTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProposalRemoveYieldFarmTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProposalRemoveYieldFarmTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AssetManagementAccountId) > 0 {
		i -= len(m.AssetManagementAccountId)
		copy(dAtA[i:], m.AssetManagementAccountId)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.AssetManagementAccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProposal(dAtA []byte, offset int, v uint64) int {
	offset -= sovProposal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProposalAddYieldFarm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalUpdateYieldFarm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalStopYieldFarm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalRemoveYieldFarm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalAddYieldFarmTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Target != nil {
		l = m.Target.Size()
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalUpdateYieldFarmTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Target != nil {
		l = m.Target.Size()
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalStopYieldFarmTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	l = len(m.AssetManagementAccountId)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func (m *ProposalRemoveYieldFarmTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	l = len(m.AssetManagementAccountId)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	return n
}

func sovProposal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProposal(x uint64) (n int) {
	return sovProposal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProposalAddYieldFarm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalAddYieldFarm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalAddYieldFarm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &AssetManagementAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalUpdateYieldFarm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalUpdateYieldFarm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalUpdateYieldFarm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &AssetManagementAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalStopYieldFarm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalStopYieldFarm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalStopYieldFarm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalRemoveYieldFarm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalRemoveYieldFarm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalRemoveYieldFarm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalAddYieldFarmTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalAddYieldFarmTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalAddYieldFarmTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Target == nil {
				m.Target = &AssetManagementTarget{}
			}
			if err := m.Target.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalUpdateYieldFarmTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalUpdateYieldFarmTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalUpdateYieldFarmTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Target == nil {
				m.Target = &AssetManagementTarget{}
			}
			if err := m.Target.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalStopYieldFarmTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalStopYieldFarmTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalStopYieldFarmTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetManagementAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetManagementAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProposalRemoveYieldFarmTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProposalRemoveYieldFarmTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProposalRemoveYieldFarmTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetManagementAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetManagementAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProposal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProposal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProposal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProposal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProposal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProposal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProposal = fmt.Errorf("proto: unexpected end of group")
)
