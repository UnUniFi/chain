// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: derivatives/perpetual_options.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OptionType int32

const (
	OptionType_OPTION_UNKNOWN OptionType = 0
	OptionType_CALL           OptionType = 1
	OptionType_PUT            OptionType = 2
)

var OptionType_name = map[int32]string{
	0: "OPTION_UNKNOWN",
	1: "CALL",
	2: "PUT",
}

var OptionType_value = map[string]int32{
	"OPTION_UNKNOWN": 0,
	"CALL":           1,
	"PUT":            2,
}

func (x OptionType) String() string {
	return proto.EnumName(OptionType_name, int32(x))
}

func (OptionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a8ecd39830a7920f, []int{0}
}

type PerpetualOptionsPositionInstance struct {
	OptionType   OptionType                             `protobuf:"varint,1,opt,name=option_type,json=optionType,proto3,enum=ununifi.derivatives.OptionType" json:"option_type,omitempty" yaml:"option_type"`
	PositionType PositionType                           `protobuf:"varint,2,opt,name=position_type,json=positionType,proto3,enum=ununifi.derivatives.PositionType" json:"position_type,omitempty" yaml:"position_type"`
	StrikePrice  github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,3,opt,name=strike_price,json=strikePrice,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"strike_price" yaml:"strike_price"`
	Premium      github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,4,opt,name=premium,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"premium" yaml:"premium"`
}

func (m *PerpetualOptionsPositionInstance) Reset()         { *m = PerpetualOptionsPositionInstance{} }
func (m *PerpetualOptionsPositionInstance) String() string { return proto.CompactTextString(m) }
func (*PerpetualOptionsPositionInstance) ProtoMessage()    {}
func (*PerpetualOptionsPositionInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8ecd39830a7920f, []int{0}
}
func (m *PerpetualOptionsPositionInstance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PerpetualOptionsPositionInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PerpetualOptionsPositionInstance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PerpetualOptionsPositionInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerpetualOptionsPositionInstance.Merge(m, src)
}
func (m *PerpetualOptionsPositionInstance) XXX_Size() int {
	return m.Size()
}
func (m *PerpetualOptionsPositionInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_PerpetualOptionsPositionInstance.DiscardUnknown(m)
}

var xxx_messageInfo_PerpetualOptionsPositionInstance proto.InternalMessageInfo

func (m *PerpetualOptionsPositionInstance) GetOptionType() OptionType {
	if m != nil {
		return m.OptionType
	}
	return OptionType_OPTION_UNKNOWN
}

func (m *PerpetualOptionsPositionInstance) GetPositionType() PositionType {
	if m != nil {
		return m.PositionType
	}
	return PositionType_POSITION_UNKNOWN
}

func init() {
	proto.RegisterEnum("ununifi.derivatives.OptionType", OptionType_name, OptionType_value)
	proto.RegisterType((*PerpetualOptionsPositionInstance)(nil), "ununifi.derivatives.PerpetualOptionsPositionInstance")
}

func init() {
	proto.RegisterFile("derivatives/perpetual_options.proto", fileDescriptor_a8ecd39830a7920f)
}

var fileDescriptor_a8ecd39830a7920f = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0x93, 0x75, 0x62, 0xe0, 0x8d, 0xaa, 0xf2, 0x26, 0x54, 0x26, 0x91, 0x94, 0x20, 0xa1,
	0x09, 0x41, 0xac, 0xb1, 0x1b, 0x27, 0x28, 0x30, 0x69, 0x62, 0x6a, 0xa3, 0xaa, 0x15, 0x68, 0x97,
	0xe0, 0x64, 0x5e, 0x6a, 0xad, 0xb1, 0xad, 0xd8, 0xa9, 0xc8, 0x5b, 0xf0, 0x10, 0x3c, 0xcc, 0x8e,
	0x3b, 0x22, 0x0e, 0x11, 0x6a, 0xdf, 0xa0, 0x4f, 0x80, 0x12, 0xa7, 0x60, 0x50, 0x2f, 0x9c, 0xf2,
	0x77, 0xfc, 0xf9, 0xf7, 0x7d, 0x9f, 0x65, 0xf0, 0xe4, 0x92, 0x64, 0x74, 0x8e, 0x15, 0x9d, 0x13,
	0x89, 0x04, 0xc9, 0x04, 0x51, 0x39, 0x9e, 0x85, 0x5c, 0x28, 0xca, 0x99, 0xf4, 0x45, 0xc6, 0x15,
	0x87, 0xfb, 0x39, 0xcb, 0x19, 0xbd, 0xa2, 0xbe, 0x21, 0x3e, 0x7c, 0x98, 0x70, 0x9e, 0xcc, 0x08,
	0xaa, 0x25, 0x51, 0x7e, 0x85, 0x30, 0x2b, 0xb4, 0xfe, 0xf0, 0x20, 0xe1, 0x09, 0xaf, 0x47, 0x54,
	0x4d, 0xcd, 0x5f, 0xf7, 0xdf, 0x03, 0x8a, 0xa6, 0x44, 0x2a, 0x9c, 0x8a, 0x46, 0xe0, 0xc4, 0x5c,
	0xa6, 0x5c, 0xa2, 0x08, 0x4b, 0x82, 0xe6, 0xc7, 0x11, 0x51, 0xf8, 0x18, 0xc5, 0x9c, 0xb2, 0x66,
	0xff, 0x91, 0x99, 0xd5, 0x98, 0xf5, 0xb6, 0xf7, 0xad, 0x05, 0x7a, 0xc1, 0xba, 0xc1, 0x50, 0x17,
	0x08, 0xb8, 0xa4, 0xd5, 0x70, 0xc6, 0xa4, 0xc2, 0x2c, 0x26, 0xf0, 0x13, 0xd8, 0xd5, 0xdd, 0x42,
	0x55, 0x08, 0xd2, 0xb5, 0x7b, 0xf6, 0x51, 0xfb, 0xa5, 0xeb, 0x6f, 0x28, 0xe8, 0x6b, 0xc4, 0xb8,
	0x10, 0xa4, 0xff, 0x60, 0x55, 0xba, 0xb0, 0xc0, 0xe9, 0xec, 0x95, 0x67, 0x9c, 0xf6, 0x46, 0x80,
	0xff, 0xd6, 0xc0, 0xcf, 0xe0, 0xbe, 0x68, 0xdc, 0x34, 0x7b, 0xab, 0x66, 0x3f, 0xde, 0xc8, 0x5e,
	0xe7, 0xaa, 0xe9, 0xdd, 0x55, 0xe9, 0x1e, 0x68, 0xfa, 0x5f, 0x04, 0x6f, 0xb4, 0x27, 0x0c, 0x1d,
	0x9c, 0x82, 0x3d, 0xa9, 0x32, 0x7a, 0x4d, 0x42, 0x91, 0xd1, 0x98, 0x74, 0x5b, 0x3d, 0xfb, 0xe8,
	0x5e, 0xff, 0xfd, 0x4d, 0xe9, 0x5a, 0x3f, 0x4a, 0xf7, 0x69, 0x42, 0xd5, 0x34, 0x8f, 0xfc, 0x98,
	0xa7, 0xa8, 0xb9, 0x48, 0xfd, 0x79, 0x21, 0x2f, 0xaf, 0x51, 0xc5, 0x93, 0xfe, 0x3b, 0x12, 0xaf,
	0x4a, 0x77, 0x5f, 0x7b, 0x99, 0x2c, 0x6f, 0xb4, 0xab, 0x97, 0x41, 0xb5, 0x82, 0x17, 0x60, 0x47,
	0x64, 0x24, 0xa5, 0x79, 0xda, 0xdd, 0xae, 0x4d, 0x5e, 0xff, 0xb7, 0x49, 0xbb, 0x29, 0xa4, 0x31,
	0xde, 0x68, 0x0d, 0x7c, 0x76, 0x02, 0xc0, 0x9f, 0x9b, 0x85, 0x10, 0xb4, 0x87, 0xc1, 0xf8, 0x6c,
	0x38, 0x08, 0x27, 0x83, 0x0f, 0x83, 0xe1, 0xc7, 0x41, 0xc7, 0x82, 0x77, 0xc1, 0xf6, 0xdb, 0x37,
	0xe7, 0xe7, 0x1d, 0x1b, 0xee, 0x80, 0x56, 0x30, 0x19, 0x77, 0xb6, 0xfa, 0xa7, 0x37, 0x0b, 0xc7,
	0xbe, 0x5d, 0x38, 0xf6, 0xcf, 0x85, 0x63, 0x7f, 0x5d, 0x3a, 0xd6, 0xed, 0xd2, 0xb1, 0xbe, 0x2f,
	0x1d, 0xeb, 0xe2, 0xb9, 0x91, 0x68, 0xc2, 0x26, 0x8c, 0x9e, 0x52, 0x14, 0x4f, 0x31, 0x65, 0xe8,
	0x8b, 0xf9, 0x46, 0x74, 0xb6, 0xe8, 0x4e, 0xfd, 0x54, 0x4e, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xa7, 0x79, 0xa1, 0xa6, 0xf7, 0x02, 0x00, 0x00,
}

func (m *PerpetualOptionsPositionInstance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PerpetualOptionsPositionInstance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PerpetualOptionsPositionInstance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Premium.Size()
		i -= size
		if _, err := m.Premium.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPerpetualOptions(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.StrikePrice.Size()
		i -= size
		if _, err := m.StrikePrice.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPerpetualOptions(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.PositionType != 0 {
		i = encodeVarintPerpetualOptions(dAtA, i, uint64(m.PositionType))
		i--
		dAtA[i] = 0x10
	}
	if m.OptionType != 0 {
		i = encodeVarintPerpetualOptions(dAtA, i, uint64(m.OptionType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPerpetualOptions(dAtA []byte, offset int, v uint64) int {
	offset -= sovPerpetualOptions(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PerpetualOptionsPositionInstance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OptionType != 0 {
		n += 1 + sovPerpetualOptions(uint64(m.OptionType))
	}
	if m.PositionType != 0 {
		n += 1 + sovPerpetualOptions(uint64(m.PositionType))
	}
	l = m.StrikePrice.Size()
	n += 1 + l + sovPerpetualOptions(uint64(l))
	l = m.Premium.Size()
	n += 1 + l + sovPerpetualOptions(uint64(l))
	return n
}

func sovPerpetualOptions(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPerpetualOptions(x uint64) (n int) {
	return sovPerpetualOptions(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PerpetualOptionsPositionInstance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPerpetualOptions
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PerpetualOptionsPositionInstance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PerpetualOptionsPositionInstance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptionType", wireType)
			}
			m.OptionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OptionType |= OptionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionType", wireType)
			}
			m.PositionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PositionType |= PositionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrikePrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPerpetualOptions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPerpetualOptions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.StrikePrice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Premium", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPerpetualOptions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPerpetualOptions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Premium.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPerpetualOptions(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPerpetualOptions
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPerpetualOptions(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPerpetualOptions
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPerpetualOptions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPerpetualOptions
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPerpetualOptions
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPerpetualOptions
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPerpetualOptions        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPerpetualOptions          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPerpetualOptions = fmt.Errorf("proto: unexpected end of group")
)
