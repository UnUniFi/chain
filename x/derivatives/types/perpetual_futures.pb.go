// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: derivatives/perpetual_futures.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PerpetualFuturesPositionInstance struct {
	PositionType PositionType                           `protobuf:"varint,1,opt,name=position_type,json=positionType,proto3,enum=ununifi.derivatives.PositionType" json:"position_type,omitempty" yaml:"position_type"`
	Size_        github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=size,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"size" yaml:"size"`
	Leverage     github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,3,opt,name=leverage,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"leverage" yaml:"leverage"`
}

func (m *PerpetualFuturesPositionInstance) Reset()         { *m = PerpetualFuturesPositionInstance{} }
func (m *PerpetualFuturesPositionInstance) String() string { return proto.CompactTextString(m) }
func (*PerpetualFuturesPositionInstance) ProtoMessage()    {}
func (*PerpetualFuturesPositionInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_8782b9e89770133d, []int{0}
}
func (m *PerpetualFuturesPositionInstance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PerpetualFuturesPositionInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PerpetualFuturesPositionInstance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PerpetualFuturesPositionInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerpetualFuturesPositionInstance.Merge(m, src)
}
func (m *PerpetualFuturesPositionInstance) XXX_Size() int {
	return m.Size()
}
func (m *PerpetualFuturesPositionInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_PerpetualFuturesPositionInstance.DiscardUnknown(m)
}

var xxx_messageInfo_PerpetualFuturesPositionInstance proto.InternalMessageInfo

func (m *PerpetualFuturesPositionInstance) GetPositionType() PositionType {
	if m != nil {
		return m.PositionType
	}
	return PositionType_POSITION_UNKNOWN
}

func init() {
	proto.RegisterType((*PerpetualFuturesPositionInstance)(nil), "ununifi.derivatives.PerpetualFuturesPositionInstance")
}

func init() {
	proto.RegisterFile("derivatives/perpetual_futures.proto", fileDescriptor_8782b9e89770133d)
}

var fileDescriptor_8782b9e89770133d = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x93, 0xde, 0xcb, 0xe5, 0xde, 0xdc, 0x7f, 0x10, 0xbb, 0x88, 0x05, 0x93, 0x1a, 0x41,
	0xba, 0xd0, 0x0c, 0xd5, 0x9d, 0xe0, 0xc2, 0x22, 0x85, 0xee, 0x6a, 0xb1, 0x1b, 0x41, 0xea, 0x24,
	0x3d, 0x4d, 0x07, 0x93, 0x99, 0x21, 0x33, 0x09, 0xc6, 0xa7, 0xf0, 0x69, 0x7c, 0x86, 0x2e, 0xbb,
	0x14, 0x17, 0x41, 0xda, 0x37, 0xe8, 0x13, 0x48, 0x93, 0x54, 0xa2, 0xb8, 0x71, 0x35, 0x1f, 0xe7,
	0x7c, 0xe7, 0x77, 0xe6, 0xe3, 0x68, 0x7b, 0x63, 0x88, 0x48, 0x82, 0x25, 0x49, 0x40, 0x20, 0x0e,
	0x11, 0x07, 0x19, 0xe3, 0x60, 0x34, 0x89, 0x65, 0x1c, 0x81, 0x70, 0x78, 0xc4, 0x24, 0xd3, 0xb7,
	0x62, 0x1a, 0x53, 0x32, 0x21, 0x4e, 0xc5, 0xdc, 0xd8, 0xf6, 0x19, 0xf3, 0x03, 0x40, 0xb9, 0xc5,
	0x8d, 0x27, 0x08, 0xd3, 0xb4, 0xf0, 0x37, 0xea, 0x3e, 0xf3, 0x59, 0x2e, 0xd1, 0x5a, 0x95, 0x55,
	0xeb, 0xe3, 0x80, 0x24, 0x21, 0x08, 0x89, 0x43, 0x5e, 0x1a, 0x4c, 0x8f, 0x89, 0x90, 0x09, 0xe4,
	0x62, 0x01, 0x28, 0x69, 0xbb, 0x20, 0x71, 0x1b, 0x79, 0x8c, 0xd0, 0xb2, 0xbf, 0x53, 0xfd, 0x6b,
	0x45, 0x17, 0x6d, 0xfb, 0xb1, 0xa6, 0x35, 0xfb, 0x9b, 0x04, 0xdd, 0x22, 0x40, 0x9f, 0x09, 0x22,
	0x09, 0xa3, 0x3d, 0x2a, 0x24, 0xa6, 0x1e, 0xe8, 0x37, 0xda, 0x5f, 0x5e, 0xd6, 0x46, 0x32, 0xe5,
	0x60, 0xa8, 0x4d, 0xb5, 0xf5, 0xef, 0x68, 0xd7, 0xf9, 0x24, 0xa2, 0xb3, 0x99, 0xbe, 0x4c, 0x39,
	0x74, 0x8c, 0x55, 0x66, 0xd5, 0x53, 0x1c, 0x06, 0x27, 0xf6, 0x3b, 0x82, 0x3d, 0xf8, 0xc3, 0x2b,
	0x3e, 0xfd, 0x42, 0xfb, 0x2e, 0xc8, 0x3d, 0x18, 0xb5, 0xa6, 0xda, 0xfa, 0xd5, 0x39, 0x9d, 0x65,
	0x96, 0xf2, 0x9c, 0x59, 0xfb, 0x3e, 0x91, 0xd3, 0xd8, 0x75, 0x3c, 0x16, 0xa2, 0x32, 0x66, 0xf1,
	0x1c, 0x8a, 0xf1, 0x2d, 0x5a, 0x73, 0x84, 0x73, 0x0e, 0xde, 0x2a, 0xb3, 0x7e, 0x17, 0x3b, 0xd6,
	0x0c, 0x7b, 0x90, 0xa3, 0xf4, 0x6b, 0xed, 0x67, 0x00, 0x09, 0x44, 0xd8, 0x07, 0xe3, 0x5b, 0x8e,
	0x3d, 0xfb, 0x02, 0xb6, 0x47, 0xe5, 0x2a, 0xb3, 0xfe, 0x17, 0xd8, 0x0d, 0xc7, 0x1e, 0xbc, 0x21,
	0x3b, 0xdd, 0xd9, 0xc2, 0x54, 0xe7, 0x0b, 0x53, 0x7d, 0x59, 0x98, 0xea, 0xc3, 0xd2, 0x54, 0xe6,
	0x4b, 0x53, 0x79, 0x5a, 0x9a, 0xca, 0xd5, 0x41, 0x05, 0x3f, 0xa4, 0x43, 0x4a, 0xba, 0x04, 0x79,
	0x53, 0x4c, 0x28, 0xba, 0xab, 0x1e, 0xa0, 0x58, 0xe4, 0xfe, 0xc8, 0xef, 0x70, 0xfc, 0x1a, 0x00,
	0x00, 0xff, 0xff, 0xfb, 0xcc, 0x4f, 0x96, 0x54, 0x02, 0x00, 0x00,
}

func (m *PerpetualFuturesPositionInstance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PerpetualFuturesPositionInstance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PerpetualFuturesPositionInstance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Leverage.Size()
		i -= size
		if _, err := m.Leverage.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPerpetualFutures(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.Size_.Size()
		i -= size
		if _, err := m.Size_.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPerpetualFutures(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.PositionType != 0 {
		i = encodeVarintPerpetualFutures(dAtA, i, uint64(m.PositionType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPerpetualFutures(dAtA []byte, offset int, v uint64) int {
	offset -= sovPerpetualFutures(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PerpetualFuturesPositionInstance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PositionType != 0 {
		n += 1 + sovPerpetualFutures(uint64(m.PositionType))
	}
	l = m.Size_.Size()
	n += 1 + l + sovPerpetualFutures(uint64(l))
	l = m.Leverage.Size()
	n += 1 + l + sovPerpetualFutures(uint64(l))
	return n
}

func sovPerpetualFutures(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPerpetualFutures(x uint64) (n int) {
	return sovPerpetualFutures(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PerpetualFuturesPositionInstance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPerpetualFutures
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PerpetualFuturesPositionInstance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PerpetualFuturesPositionInstance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionType", wireType)
			}
			m.PositionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualFutures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PositionType |= PositionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualFutures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPerpetualFutures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPerpetualFutures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Size_.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leverage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPerpetualFutures
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPerpetualFutures
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPerpetualFutures
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Leverage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPerpetualFutures(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPerpetualFutures
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPerpetualFutures(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPerpetualFutures
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPerpetualFutures
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPerpetualFutures
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPerpetualFutures
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPerpetualFutures
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPerpetualFutures
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPerpetualFutures        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPerpetualFutures          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPerpetualFutures = fmt.Errorf("proto: unexpected end of group")
)
