syntax = "proto3";
package ununifi.auction;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
// this line is used by starport scaffolding # 1
import "auction/auction.proto";

option go_package = "github.com/UnUniFi/chain/deprecated/auction/types";

// Query defines the gRPC querier service.
service Query {
	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
		option (google.api.http).get = "/ununifi/auction/params";
	}
  // this line is used by starport scaffolding # 2
	rpc Auction(QueryGetAuctionRequest) returns (QueryGetAuctionResponse) {
		option (google.api.http).get = "/ununifi/auction/auctions/{id}";
	}
	rpc AuctionAll(QueryAllAuctionRequest) returns (QueryAllAuctionResponse) {
		option (google.api.http).get = "/ununifi/auction/auctions";
	}

}

message QueryParamsRequest {}

message QueryParamsResponse {
	Params params = 1;
}

// this line is used by starport scaffolding # 3
message QueryGetAuctionRequest {
	uint64 id = 1;
}

message QueryGetAuctionResponse {
  google.protobuf.Any auction = 1 [(cosmos_proto.accepts_interface) = "Auction"];
}

message QueryAllAuctionRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAuctionResponse {
  repeated google.protobuf.Any auctions = 1 [(cosmos_proto.accepts_interface) = "Auction"];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
