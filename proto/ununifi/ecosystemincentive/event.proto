syntax = "proto3";
package ununifi.ecosystemincentive;

import "ununifi/ecosystemincentive/ecosystemincentive.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/UnUniFi/chain/x/ecosystemincentive/types";

message EventRegister {
  string                   recipient_container_id = 1 [(gogoproto.moretags) = "yaml:\"recipient_container_id\""];
  repeated WeightedAddress weighted_addresses     = 2
      [(gogoproto.moretags) = "yaml:\"weighted_addresses\"", (gogoproto.nullable) = false];
}

message EventWithdrawAllRewards {
  string   sender                                         = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  repeated cosmos.base.v1beta1.Coin all_withdrawn_rewards = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"all_withdrawn_rewards\"",
    (gogoproto.nullable)     = false
  ];
}

message EventWithdrawReward {
  string                   sender           = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  cosmos.base.v1beta1.Coin withdrawn_reward = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.moretags)     = "yaml:\"withdrawn_reward\"",
    (gogoproto.nullable)     = false
  ];
}

message EventFailedParsingTxMemoData {
  string class_id = 1 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id   = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
  string memo     = 3 [(gogoproto.moretags) = "yaml:\"memo\""];
}

message EventRecordedRecipientContainerId {
  string recipient_container_id = 1 [(gogoproto.moretags) = "yaml:\"recipient_container_id\""];
  string class_id               = 2 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id                 = 3 [(gogoproto.moretags) = "yaml:\"nft_id\""];
}

message EventDeletedNftIdRecordedForFrontendReward {
  string recipient_container_id = 1 [(gogoproto.moretags) = "yaml:\"recipient_container_id\""];
  string class_id               = 2 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id                 = 3 [(gogoproto.moretags) = "yaml:\"nft_id\""];
}

message EventNotRegisteredRecipientContainerId {
  string recipient_container_id = 1 [(gogoproto.moretags) = "yaml:\"recipient_container_id\""];
  string class_id               = 2 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id                 = 3 [(gogoproto.moretags) = "yaml:\"nft_id\""];
}

message EventNotRecordedNftId {
  string class_id = 1 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id   = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
}

message EventUpdatedReward {
  string                   recipient_container_id = 1 [(gogoproto.moretags) = "yaml:\"recipient_container_id\""];
  cosmos.base.v1beta1.Coin earned_reward          = 2 [
    (gogoproto.moretags)     = "yaml:\"earned_reward\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)     = false
  ];
}

message EventVersionUnmatched {
  string unmatched_version = 1 [(gogoproto.moretags) = "yaml:\"unmatched_version\""];
  string class_id          = 2 [(gogoproto.moretags) = "yaml:\"class_id\""];
  string nft_id            = 3 [(gogoproto.moretags) = "yaml:\"nft_id\""];
}

message EventDistributionForStakers {
  cosmos.base.v1beta1.Coin distributed_amount = 1 [
    (gogoproto.moretags)     = "yaml:\"distributed_amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)     = false
  ];
  int64 block_height = 2 [(gogoproto.moretags) = "yaml:\"block_height\""];
}
