syntax = "proto3";
package ununifi.nftbackedloan;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "ununifi/nftbackedloan/params.proto";
import "ununifi/nftbackedloan/nftbackedloan.proto";

option go_package = "github.com/UnUniFi/chain/x/nftbackedloan/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/params";
  }
  rpc ListedNfts(QueryListedNftsRequest) returns (QueryListedNftsResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/listed-nfts";
  }
  rpc ListedNft(QueryListedNftRequest) returns (QueryListedNftResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/listed-nfts/nft";
  }
  rpc ListedClasses(QueryListedClassesRequest) returns (QueryListedClassesResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/listed-classes";
  }
  rpc ListedClass(QueryListedClassRequest) returns (QueryListedClassResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/listed-classes/class";
  }

  rpc Loan(QueryLoanRequest) returns (QueryLoanResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/loans";
  }
  rpc NftBids(QueryNftBidsRequest) returns (QueryNftBidsResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/bids";
  }
  rpc BidderBids(QueryBidderBidsRequest) returns (QueryBidderBidsResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/bids/{bidder}";
  }

  rpc Rewards(QueryRewardsRequest) returns (QueryRewardsResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/rewards/{address}";
  }
  rpc Liquidation(QueryLiquidationRequest) returns (QueryLiquidationResponse) {
    option (google.api.http).get = "/ununifi/nftbackedloan/liquidation";
  }
}

message QueryParamsRequest {}
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryListedNftRequest {
  string class_id = 1;
  string token_id = 2;
}
message QueryListedNftResponse {
  Listing listing = 1 [(gogoproto.nullable) = false];
}

message QueryListedNftsRequest {
  string owner = 1 [
    (gogoproto.moretags)  = "yaml:\"owner\"",
    (cosmos_proto.scalar) = "github.com/UnUniFi/chain/types.StringAccAddress"
  ];
}
message QueryListedClassesRequest {
  int32 nft_limit = 1;
}
message QueryListedClassRequest {
  string class_id  = 1;
  int32  nft_limit = 2;
}

message ListedNftDetail {
  Listing listing  = 1 [(gogoproto.nullable) = false];
  NftInfo nft_info = 2 [(gogoproto.nullable) = false];
}
message QueryListedNftsResponse {
  repeated ListedNftDetail listings = 1 [(gogoproto.nullable) = false];
}

message QueryListedClassesResponse {
  repeated QueryListedClassResponse classes = 1;
}
message QueryListedClassResponse {
  string           class_id    = 1;
  string           name        = 2;
  string           description = 3;
  string           symbol      = 4;
  string           uri         = 5;
  string           urihash     = 6;
  repeated NftInfo nfts        = 7;
  uint64           nft_count   = 8;
}

// message QueryLoansRequest {}
// message QueryLoansResponse {
//   repeated QueryLoanResponse loans = 1 [(gogoproto.nullable) = false];
// }

message QueryLoanRequest {
  string class_id = 1;
  string token_id = 2;
}

message QueryLoanResponse {
  NftId                    nft_id           = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin borrowing_amount = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin borrowing_limit  = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin total_deposit    = 4 [(gogoproto.nullable) = false];
}

message QueryNftBidsRequest {
  string class_id = 1;
  string token_id = 2;
}
message QueryNftBidsResponse {
  repeated Bid bids = 1 [(gogoproto.nullable) = false];
}

message QueryBidderBidsRequest {
  string bidder = 1 [
    (gogoproto.moretags)  = "yaml:\"bidder\"",
    (cosmos_proto.scalar) = "github.com/UnUniFi/chain/types.StringAccAddress"
  ];
}
message QueryBidderBidsResponse {
  repeated Bid bids = 1 [(gogoproto.nullable) = false];
}

message QueryRewardsRequest {
  uint64 address = 1;
}
message QueryRewardsResponse {
  repeated cosmos.base.v1beta1.Coin rewards = 1 [(gogoproto.nullable) = false];
}

message QueryLiquidationRequest {
  string class_id = 1;
  string token_id = 2;
}

message QueryLiquidationResponse {
  Liquidations liquidations = 1 [(gogoproto.nullable) = true];
}
