syntax = "proto3";
package ununifi.nftbackedloan;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/UnUniFi/chain/x/nftbackedloan/types";

enum ListingState {
  UNKNOWN          = 0;
  LISTING          = 1;
  BIDDING          = 2;
  SELLING_DECISION = 3;
  LIQUIDATION      = 4;
  SUCCESSFUL_BID   = 5;
}

message NftIdentifier {
  string class_id = 1;
  string nft_id   = 2;
}

message BidId {
  NftIdentifier nft_id = 1;
  string        bidder = 2;
}

message ListedClass {
  string          class_id = 1;
  repeated string nft_ids  = 2;
}

message NftInfo {
  string id       = 1;
  string uri      = 2;
  string uri_hash = 3;
}

message NftListing {
  NftIdentifier nft_id               = 1 [(gogoproto.nullable) = false];
  string        owner                = 2;
  ListingState  state                = 3;
  string        bid_denom            = 4;
  string        minimum_deposit_rate = 5 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  google.protobuf.Timestamp started_at = 6
      [(gogoproto.moretags) = "yaml:\"started_at\"", (gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp liquidated_at = 7
      [(gogoproto.moretags) = "yaml:\"liquidated_at\"", (gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp full_payment_end_at = 8
      [(gogoproto.moretags) = "yaml:\"full_payment_end_at\"", (gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp successful_bid_end_at = 9 [
    (gogoproto.moretags) = "yaml:\"successful_bid_end_at\"",
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true
  ];
  cosmos.base.v1beta1.Coin collected_amount          = 10 [(gogoproto.nullable) = false];
  bool                     collected_amount_negative = 11;
  google.protobuf.Duration minimum_bidding_period = 12 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
}

message Borrowing {
  cosmos.base.v1beta1.Coin  amount         = 1 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp last_repaid_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message NftBid {
  BidId                     id            = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin  price         = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin  deposit       = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin  paid_amount   = 4 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp expiry        = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  string                    interest_rate = 6 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  bool                      automatic_payment = 7;
  google.protobuf.Timestamp created_at        = 8
      [(gogoproto.moretags) = "yaml:\"create_at\"", (gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // borrow info
  Borrowing borrow = 9 [(gogoproto.nullable) = false];
}

message Liquidation {
  cosmos.base.v1beta1.Coin  amount           = 1 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp liquidation_date = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message Liquidations {
  Liquidation          liquidation      = 1 [(gogoproto.nullable) = true];
  repeated Liquidation next_liquidation = 2 [(gogoproto.nullable) = false];
}