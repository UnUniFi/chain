syntax = "proto3";
package ununifi.nftfactory;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "ununifi/nftfactory/nftfactory.proto";

option go_package = "github.com/UnUniFi/chain/x/nftfactory/types";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ununifi/nftfactory/params";
  }
  rpc ClassAuthorityMetadata(QueryClassAuthorityMetadataRequest)
      returns (QueryClassAuthorityMetadataResponse) {
    option (google.api.http).get =
        "/ununifi/nftfactory/class/factory/{creator}/{subclass}/authority-metadata";
  }
  rpc ClassesFromCreator(QueryClassesFromCreatorRequest)
      returns (QueryClassesFromCreatorResponse) {
    option (google.api.http).get =
        "/ununifi/nftfactory/classes-from-creator/{creator}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryClassAuthorityMetadataRequest {
  string creator = 1 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
  string subclass = 2 [ (gogoproto.moretags) = "yaml:\"subclass\"" ];
}
message QueryClassAuthorityMetadataResponse {
  ClassAuthorityMetadata authority_metadata = 1 [
    (gogoproto.moretags) = "yaml:\"authority_metadata\"",
    (gogoproto.nullable) = false
  ];
}

message QueryClassesFromCreatorRequest {
  string creator = 1 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
}
message QueryClassesFromCreatorResponse {
  repeated string classes = 1 [ (gogoproto.moretags) = "yaml:\"classes\"" ];
}