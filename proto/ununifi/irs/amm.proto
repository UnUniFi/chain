syntax = "proto3";
package ununifi.irs;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/UnUniFi/chain/x/irs/types";

// TranchePoolParams defined the parameters that will be managed by the pool
message TranchePoolParams {
  string swap_fee   = 1 [(gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (gogoproto.nullable) = false];
  string exit_fee   = 2 [(gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (gogoproto.nullable) = false];
  uint64 start_time = 3;
  uint64 duration   = 4;
}

message TranchePool {
  option (gogoproto.goproto_getters)         = false;
  option (gogoproto.goproto_stringer)        = false;
  option (cosmos_proto.implements_interface) = "PoolI";

  uint64            id          = 2;
  string            address     = 1;
  TranchePoolParams pool_params = 3 [(gogoproto.nullable) = false];

  // sum of all LP tokens sent out
  cosmos.base.v1beta1.Coin total_shares = 5 [(gogoproto.nullable) = false];
  // Pool assets are sorted by denomination
  repeated cosmos.base.v1beta1.Coin pool_assets = 6 [(gogoproto.nullable) = false];
}
