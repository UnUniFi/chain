syntax = "proto3";
package nftvault.eventhook;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eventhook/params.proto";
import "eventhook/eventhook.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/UnUniFi/chain/x/eventhook/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ununifi/eventhook/params";
  }
  // this line is used by starport scaffolding # 2
  rpc HookAll(QueryAllHookRequest) returns (QueryAllHookResponse) {
    option (google.api.http).get = "/ununifi/eventhook/hooks/query-param";
  }

  rpc Hook(QueryGetHookRequest) returns (QueryGetHookResponse) {
    option (google.api.http).get = "/ununifi/eventhook/hooks/{id}";
  }

}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
message QueryAllHookRequest {
  string event_type = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllHookResponse {
  repeated Hook hooks = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetHookRequest {
  string event_type = 1;
  uint64 id = 2;
}

message QueryGetHookResponse {
  Hook hook = 1 [(gogoproto.nullable) = false];
}
