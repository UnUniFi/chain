syntax = "proto3";
package ununifi.ecosystemincentive;

import "gogoproto/gogo.proto";

option go_package = "github.com/UnUniFi/chain/x/ecosystem-incentive/types";

// Msg defines the Msg service.
service Msg {
  rpc IncentiveRegister(MsgIncentiveRegister) returns (MsgIncentiveRegisterResponse);
  rpc WithdrawAllRewards(MsgWithdrawAllRewards) returns (MsgWithdrawAllRewardsResponse);
  rpc WithdrawReward(MsgWithdrawReward) returns (MsgWithdrawRewardsResponse);
}

message MsgIncentiveRegister {
  string incentive_id = 1;
  repeated string subject_addrs = 2 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
  repeated string weights = 3;
}
message MsgIncentiveRegisterResponse {}

message MsgWithdrawAllRewards {
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
}
message MsgWithdrawAllRewardsResponse {}

message MsgWithdrawReward {
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
  string denom = 2;
}
message MsgWithdrawRewardsResponse {}
