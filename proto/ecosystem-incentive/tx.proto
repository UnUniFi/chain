syntax = "proto3";
package ununifi.ecosystemincentive;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/UnUniFi/chain/x/ecosystem-incentive/types";

// Msg defines the Msg service.
service Msg {
  rpc Register(MsgRegister) returns (MsgRegisterResponse);
  rpc WithdrawAllRewards(MsgWithdrawAllRewards) returns (MsgWithdrawAllRewardsResponse);
  rpc WithdrawReward(MsgWithdrawReward) returns (MsgWithdrawRewardResponse);
}

message MsgRegister {
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
  string incentive_unit_id = 2 [ (gogoproto.moretags) = "yaml:\"incentive_unit_id\"" ];
  repeated string subject_addrs = 3 [
    (gogoproto.moretags) = "yaml:\"subject_addrs\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
  repeated string weights = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"weights\"",
    (gogoproto.nullable) = false
  ];
}
message MsgRegisterResponse {}

message MsgWithdrawAllRewards {
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
}
message MsgWithdrawAllRewardsResponse {}

message MsgWithdrawReward {
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress",
    (gogoproto.nullable) = false
  ];
  string denom = 2 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
}
message MsgWithdrawRewardResponse {}
