syntax = "proto3";
package ununifi.derivatives;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "derivatives/derivatives.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/UnUniFi/chain/x/derivatives/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ununifi/derivatives/params";
  }
  // this line is used by starport scaffolding # 2
  rpc Pool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/ununifi/derivatives/pool";
  }

  rpc LiquidityProviderTokenRealAPY(QueryLiquidityProviderTokenRealAPYRequest) returns (QueryLiquidityProviderTokenRealAPYResponse) {
    option (google.api.http).get = "/ununifi/derivatives/liquidity-providers/real-apy";
  }

  rpc LiquidityProviderTokenNominalAPY(QueryLiquidityProviderTokenNominalAPYRequest) returns (QueryLiquidityProviderTokenNominalAPYResponse) {
    option (google.api.http).get = "/ununifi/derivatives/liquidity-providers/nominal-apy";
  }

  rpc PerpetualFutures(QueryPerpetualFuturesRequest) returns (QueryPerpetualFuturesResponse) {
    option (google.api.http).get = "/ununifi/derivatives/perpetual-futures";
  }

  rpc PerpetualFuturesPair(QueryPerpetualFuturesPairRequest) returns (QueryPerpetualFuturesPairResponse) {
    option (google.api.http).get = "/ununifi/derivatives/perpetual-futures/{denom}/{quote_denom}";
  }

  rpc PerpetualOptions(QueryPerpetualOptionsRequest) returns (QueryPerpetualOptionsResponse) {
    option (google.api.http).get = "/ununifi/derivatives/perpetual-options";
  }

  rpc PerpetualOptionsPair(QueryPerpetualOptionsPairRequest) returns (QueryPerpetualOptionsPairResponse) {
    option (google.api.http).get = "/ununifi/derivatives/perpetual-options/{denom}/{quote_denom}";
  }

  rpc AllOpeningPositions(QueryAllOpeningPositionsRequest) returns (QueryAllOpeningPositionsResponse) {
    option (google.api.http).get = "/ununifi/derivatives/positions/opening";
  }

  rpc ClosedPosition(QueryClosedPositionRequest) returns (QueryClosedPositionResponse) {
    option (google.api.http).get = "/ununifi/derivatives/positions/closed/{id}";
  }

  rpc AddressOpeningPositions(QueryAddressOpeningPositionsRequest) returns (QueryAddressOpeningPositionsResponse) {
    option (google.api.http).get = "/ununifi/derivatives/positions/{address}/opening";
  }

  rpc AddressClosedPositions(QueryAddressClosedPositionsRequest) returns (QueryAddressClosedPositionsResponse) {
    option (google.api.http).get = "/ununifi/derivatives/positions/{address}/closed";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
message QueryPoolRequest {}

message QueryPoolResponse {
  string metrics_quote_ticker = 1 [
    (gogoproto.moretags)  = "yaml:\"metrics_quote_ticker\""
  ];
  PoolMarketCap pool_market_cap = 2 [
    (gogoproto.moretags)  = "yaml:\"pool_market_cap\""
  ];
  string volume_24hours = 3 [
    (gogoproto.moretags)  = "yaml:\"volume_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string fees_24hours = 4 [
    (gogoproto.moretags)  = "yaml:\"fees_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  
}

message QueryLiquidityProviderTokenRealAPYRequest {
  int64 before_height = 1 [
    (gogoproto.moretags)  = "yaml:\"before_height\""
  ];
  int64 after_height = 2 [
    (gogoproto.moretags)  = "yaml:\"after_height\""
  ];
}

message QueryLiquidityProviderTokenRealAPYResponse {
  string apy = 1 [
    (gogoproto.moretags)  = "yaml:\"apy\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

message QueryLiquidityProviderTokenNominalAPYRequest {
  int64 before_height = 1 [
    (gogoproto.moretags)  = "yaml:\"before_height\""
  ];
  int64 after_height = 2 [
    (gogoproto.moretags)  = "yaml:\"after_height\""
  ];
}

message QueryLiquidityProviderTokenNominalAPYResponse {
  string apy = 1 [
    (gogoproto.moretags)  = "yaml:\"apy\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

message QueryPerpetualFuturesRequest {}

message QueryPerpetualFuturesResponse {
  string metrics_quote_ticker = 2 [
    (gogoproto.moretags)  = "yaml:\"metrics_quote_ticker\""
  ];
  string volume_24hours = 3 [
    (gogoproto.moretags)  = "yaml:\"volume_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string fees_24hours = 4 [
    (gogoproto.moretags)  = "yaml:\"fees_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string long_positions = 5 [
    (gogoproto.moretags)  = "yaml:\"long_positions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string short_positions = 6 [
    (gogoproto.moretags)  = "yaml:\"short_positions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

message QueryPerpetualFuturesPairRequest {
  string denom = 1 [
    (gogoproto.moretags)  = "yaml:\"denom\""
  ];
  string quote_denom = 2 [
    (gogoproto.moretags)  = "yaml:\"quote_denom\""
  ];
}

message QueryPerpetualFuturesPairResponse {
  string price = 1 [
    (gogoproto.moretags)  = "yaml:\"price\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string metrics_quote_ticker = 2 [
    (gogoproto.moretags)  = "yaml:\"metrics_quote_ticker\""
  ];
  string volume_24hours = 3 [
    (gogoproto.moretags)  = "yaml:\"volume_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string fees_24hours = 4 [
    (gogoproto.moretags)  = "yaml:\"fees_24hours\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string long_positions = 5 [
    (gogoproto.moretags)  = "yaml:\"long_positions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string short_positions = 6 [
    (gogoproto.moretags)  = "yaml:\"short_positions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

message QueryPerpetualOptionsRequest {}

message QueryPerpetualOptionsResponse {}

message QueryPerpetualOptionsPairRequest {
  string denom = 1 [
    (gogoproto.moretags)  = "yaml:\"denom\""
  ];
  string quote_denom = 2 [
    (gogoproto.moretags)  = "yaml:\"quote_denom\""
  ];
}

message QueryPerpetualOptionsPairResponse {}

message QueryAllOpeningPositionsRequest {}

message QueryAllOpeningPositionsResponse {
  repeated OpenedPosition positions = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryClosedPositionRequest {
  string id = 1 [
    (gogoproto.moretags)  = "yaml:\"id\""
  ];
}

message QueryClosedPositionResponse {
  ClosedPosition position = 1;
}

message QueryAddressOpeningPositionsRequest {
  string address = 1 [
    (gogoproto.moretags)  = "yaml:\"address\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress"
  ];
}

message QueryAddressOpeningPositionsResponse {
  repeated OpenedPosition positions = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAddressClosedPositionsRequest {
  string address = 1 [
    (gogoproto.moretags)  = "yaml:\"address\"",
    (gogoproto.customtype) = "github.com/UnUniFi/chain/types.StringAccAddress"
  ];
}

message QueryAddressClosedPositionsResponse {
  repeated ClosedPosition positions = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
