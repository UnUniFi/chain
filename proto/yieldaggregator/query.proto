syntax = "proto3";
package ununifi.yieldaggregator;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "yieldaggregator/params.proto";
// this line is used by starport scaffolding # 1
import "yieldaggregator/yieldaggregator.proto";

option go_package = "github.com/UnUniFi/chain/x/yieldaggregator/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/params";
  }
  // this line is used by starport scaffolding # 2
  rpc VaultAll(QueryAllVaultRequest) returns (QueryAllVaultResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/vaults";
  }

  rpc Vault(QueryGetVaultRequest) returns (QueryGetVaultResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/vaults/{id}";
  }

  rpc StrategyAll(QueryAllStrategyRequest) returns (QueryAllStrategyResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/strategies/query-param";
  }

  rpc Strategy(QueryGetStrategyRequest) returns (QueryGetStrategyResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/strategies/{id}";
  }

  rpc EstimateMintAmount(QueryEstimateMintAmountRequest) returns (QueryEstimateMintAmountResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/vaults/{id}/estimate-mint-amount";
  }

  rpc EstimateRedeemAmount(QueryEstimateRedeemAmountRequest) returns (QueryEstimateRedeemAmountResponse) {
    option (google.api.http).get = "/ununifi/yieldaggregator/vaults/{id}/estimate-redeem-amount";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3

message QueryAllVaultRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVaultResponse {
  repeated Vault vaults = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetVaultRequest {
  uint64 id = 1;
}

message QueryGetVaultResponse {
  Vault vault = 1 [(gogoproto.nullable) = false];
  repeated Strategy strategies = 2 [(gogoproto.nullable) = false];
  string vault_address = 3;
  string total_bonded_amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string total_unbonding_amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string total_withdrawal_balance = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryAllStrategyRequest {
  string denom = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllStrategyResponse {
  repeated Strategy strategies = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStrategyRequest {
  string denom = 1;
  uint64 id = 2;
}

message QueryGetStrategyResponse {
  Strategy strategy = 1 [(gogoproto.nullable) = false];
}

message QueryEstimateMintAmountRequest {
  uint64 id = 1;
  string deposit_amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryEstimateMintAmountResponse {
  cosmos.base.v1beta1.Coin mint_amount = 1 [(gogoproto.nullable) = false];
}

message QueryEstimateRedeemAmountRequest {
  uint64 id = 1;
  string burn_amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryEstimateRedeemAmountResponse {
  cosmos.base.v1beta1.Coin redeem_amount = 1 [(gogoproto.nullable) = false];
}
