syntax = "proto3";
package ununifi.chain.yieldaggregator;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/UnUniFi/chain/x/yield-aggregator/types";

message Vault {
  string denom = 1;
  VaultMetrics metrics = 2 [(gogoproto.nullable) = false];
}

message Strategy {
  string vault_denom = 1;
  uint64 id = 2;
  string contract_address = 3;
  string name = 4;
  string weight = 5 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  StrategyMetrics metrics = 6 [(gogoproto.nullable) = false];
}

message VaultMetrics {
  string apy = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string tvl = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message StrategyMetrics {
  string apr = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string tvl = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}